{"version":3,"sources":["webpack:///../node_modules/@splidejs/splide/dist/js/splide.esm.js","webpack:///../node_modules/toaster-js/Toaster.js","webpack:///../node_modules/toaster-js/index.js"],"names":["factory","self","__webpack_modules__","311","__unused_webpack_module","__webpack_exports__","__webpack_require__","r","d","module_Splide","states_namespaceObject","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","CREATED","DESTROYED","IDLE","MOUNTED","MOVING","keys","each","obj","callback","some","index","values","map","isObject","subject","merge","_ref","from","to","value","toArray","Array","isArray","between","m1","m2","Math","min","max","sprintf","format","replacements","replace","unit","type","parseFloat","pad","number","toPixel","root","div","create","applyStyle","position","width","append","clientWidth","dom_remove","find","elm","selector","querySelector","split","child","parent","tagOrClassName","children","filter","hasClass","tagName","tag","attrs","document","createElement","setAttribute","domify","html","innerHTML","firstChild","elms","forEach","parentElement","removeChild","appendChild","before","ref","insertBefore","styles","prop","style","addOrRemoveClasses","classes","remove","name","classList","addClass","removeClass","className","contains","getAttribute","removeAttribute","names","getRect","getBoundingClientRect","LOOP","slide","Splide","Components","list","endCallback","mount","Elements","on","e","start","destIndex","newIndex","prevIndex","coord","done","options","edgeIndex","Controller","speed","is","rewindSpeed","transition","easing","transform","x","y","fade","slides","track","height","clientHeight","setTimeout","error","message","console","MESSAGE_PREFIX","exist","Error","ROOT","STATUS_CLASSES","active","visible","loading","DEFAULTS","rewind","waitForTransition","fixedWidth","fixedHeight","heightRatio","autoWidth","autoHeight","perPage","perMove","clones","focus","gap","padding","arrows","arrowPath","pagination","autoplay","interval","pauseOnHover","pauseOnFocus","resetProgress","lazyLoad","preloadPages","keyboard","drag","dragAngleThreshold","swipeDistanceThreshold","flickVelocityThreshold","flickPower","flickMaxPages","direction","cover","accessibility","slideFocus","isNavigation","trimSpace","updateOnMove","throttle","destroy","breakpoints","slider","container","arrow","prev","next","page","clone","progress","bar","play","pause","spinner","sr","i18n","first","last","slideX","pageX","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","curr","Element","Event","data","unsubscribe","item","removeEventListener","event","handler","events","addEventListener","push","off","emit","_len","args","_key","core_event","State","set","state","STATES","_o","_i","_c","_e","_t","Constructor","protoProps","staticProps","_proto","Extensions","Transition","_this","components","Component","toLowerCase","compose","component","required","undefined","mounted","visibility","sync","splide","sibling","_this$Event","concat","go","control","wait","add","refresh","bind","completely","_this2","reverse","get","parseInt","created","JSON","parse","components_elements","Slides","id","window","uid","init","getClasses","Slide","findParts","collect","register","realIndex","SlideObject","STATUS_UPDATE_EVENTS","isClone","update","restoreStyles","_update","display","isActive","isVisible","ceil","trackRect","slideRect","top","bottom","left","right","isWithin","within","diff","abs","forVisibility","elements_slide","getSlide","getSlides","includeClones","getSlidesByPage","idx","toIndex","splice","images","querySelectorAll","count","img","onload","onerror","loaded","rootClass","floor","controller","isLoop","newOptions","silently","trim","Track","matches","String","match","indicator","sign","toPage","parsePage","hasFocus","pageLength","edge","isRtl","Layout","isVertical","isFade","isRTL","isLoopPending","jump","newPosition","getTrimmedPosition","toCoord","onTransitionEnd","translate","cancel","shift","toPosition","innerSize","totalSize","size","minDistance","Infinity","slideIndex","distance","slideSize","offset","cloneCount","Clones","getCloneCount","slice","cloneDeeply","generateClones","baseCount","dimension","fixedSize","cloneNode","func","timeout","layout","resize","totalHeight","totalWidth","slideHeight","slideWidth","margin","paddingTop","paddingBottom","offsetHeight","vertical","paddingLeft","paddingRight","listRect","offsetWidth","horizontal","getOwnPropertyDescriptor","maxWidth","drag_abs","startCoord","startInfo","currentInfo","isDragging","axis","Drag","disabled","move","passive","end","preventDefault","analyze","cancelable","_start","_end","log","resist","angle","atan","PI","shouldMove","info","velocity","absV","destination","timeStamp","touches","_ref2","clientX","clientY","_ref3","_ref3$x","fromX","_ref3$y","duration","time","click","onClick","stopPropagation","stopImmediatePropagation","capture","PAUSE_FLAGS","updateDisabled","_Components$Controlle","nextIndex","isEnough","createArrow","wrapper","firstElementChild","appendArrows","Pagination","items","li","button","createPagination","updateAttributes","getItem","KEY_MAP","ltr","ArrowLeft","ArrowRight","Left","Right","rtl","ttb","ArrowUp","ArrowDown","Up","Down","a11y","allAttributes","updateSlide","initArrows","controls","updateArrows","prevLabel","nextLabel","initPagination","activeItem","label","join","updatePagination","initNavigation","main","isButton","mainSlide","updateNavigation","Arrows","TRIGGER_KEYS","COMPLETE","Options","Breakpoints","initialOptions","prevPoint","throttledCheck","check","point","mql","matchMedia","sort","n","m","Click","Autoplay","flags","elapse","rate","requestAnimationFrame","_pause","step","timestamp","reset","createInterval","switchOn","flag","f","indexOf","Cover","uncover","src","background","LazyLoad","isSequential","isNaN","image","load","loadNext","srcset","Keyboard","Sync","syncMain","syncSibling","moveSibling","A11y","_Core","subClass","superClass","constructor","__proto__","__webpack_module_cache__","moduleId","exports","module","definition","o","Symbol","toStringTag","toaster","Toaster","toasts","timeouts","Map","toast","attach","seek","has","clearTimeout","delete","tst","element","detach","t","removeAll","Toast","TYPE_INFO","TYPE_MESSAGE","TYPE_WARNING","TYPE_ERROR","TYPE_DONE","TIME_SHORT","TIME_NORMAL","TIME_LONG","deleteDelay","topOrigin","text","el1","el2","textContent","updateVisualPosition","body","delta","parentNode"],"mappings":"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","file":"vendors.f6fe60355e813b734ceb.js","sourcesContent":["/*!\n * Splide.js\n * Version  : 2.4.20\n * License  : MIT\n * Copyright: 2020 Naotoshi Fujita\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Splide\"] = factory();\n\telse\n\t\troot[\"Splide\"] = factory();\n})(self, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 311:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => /* binding */ module_Splide\n});\n\n// NAMESPACE OBJECT: ./src/js/constants/states.js\nvar states_namespaceObject = {};\n__webpack_require__.r(states_namespaceObject);\n__webpack_require__.d(states_namespaceObject, {\n  \"CREATED\": () => CREATED,\n  \"DESTROYED\": () => DESTROYED,\n  \"IDLE\": () => IDLE,\n  \"MOUNTED\": () => MOUNTED,\n  \"MOVING\": () => MOVING\n});\n\n;// CONCATENATED MODULE: ./src/js/core/event.js\n/**\r\n * The function for providing an Event object simply managing events.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The function for providing an Event object simply managing events.\r\n */\n/* harmony default export */ const core_event = (function () {\n  /**\r\n   * Store all event data.\r\n   *\r\n   * @type {Array}\r\n   */\n  var data = [];\n  var Event = {\n    /**\r\n     * Subscribe the given event(s).\r\n     *\r\n     * @param {string}   events  - An event name. Use space to separate multiple events.\r\n     *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\r\n     * @param {function} handler - A callback function.\r\n     * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\r\n     * @param {Object}   options - Optional. Options for addEventListener.\r\n     */\n    on: function on(events, handler, elm, options) {\n      if (elm === void 0) {\n        elm = null;\n      }\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      events.split(' ').forEach(function (event) {\n        if (elm) {\n          elm.addEventListener(event, handler, options);\n        }\n\n        data.push({\n          event: event,\n          handler: handler,\n          elm: elm,\n          options: options\n        });\n      });\n    },\n\n    /**\r\n     * Unsubscribe the given event(s).\r\n     *\r\n     * @param {string}  events - A event name or names split by space.\r\n     * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\r\n     */\n    off: function off(events, elm) {\n      if (elm === void 0) {\n        elm = null;\n      }\n\n      events.split(' ').forEach(function (event) {\n        data = data.filter(function (item) {\n          if (item && item.event === event && item.elm === elm) {\n            unsubscribe(item);\n            return false;\n          }\n\n          return true;\n        });\n      });\n    },\n\n    /**\r\n     * Emit an event.\r\n     * This method is only for custom events.\r\n     *\r\n     * @param {string}  event - An event name.\r\n     * @param {*}       args  - Any number of arguments passed to handlers.\r\n     */\n    emit: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      data.forEach(function (item) {\n        if (!item.elm && item.event.split('.')[0] === event) {\n          item.handler.apply(item, args);\n        }\n      });\n    },\n\n    /**\r\n     * Clear event data.\r\n     */\n    destroy: function destroy() {\n      data.forEach(unsubscribe);\n      data = [];\n    }\n  };\n  /**\r\n   * Remove the registered event listener.\r\n   *\r\n   * @param {Object} item - An object containing event data.\r\n   */\n\n  function unsubscribe(item) {\n    if (item.elm) {\n      item.elm.removeEventListener(item.event, item.handler, item.options);\n    }\n  }\n\n  return Event;\n});\n;// CONCATENATED MODULE: ./src/js/core/state.js\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @param {string|number} initialState - Provide the initial state value.\r\n */\n/* harmony default export */ const state = (function (initialState) {\n  /**\r\n   * Store the current state.\r\n   *\r\n   * @type {string|number}\r\n   */\n  var curr = initialState;\n  return {\n    /**\r\n     * Change state.\r\n     *\r\n     * @param {string|number} state - A new state.\r\n     */\n    set: function set(state) {\n      curr = state;\n    },\n\n    /**\r\n     * Verify if the current state is given one or not.\r\n     *\r\n     * @param {string|number} state - A state name to be verified.\r\n     *\r\n     * @return {boolean} - True if the current state is the given one.\r\n     */\n    is: function is(state) {\n      return state === curr;\n    }\n  };\n});\n;// CONCATENATED MODULE: ./src/js/utils/object.js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\r\n * Some utility functions related with Object, supporting IE.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\nvar keys = Object.keys;\n/**\r\n * Iterate an object like Array.forEach.\r\n * IE doesn't support forEach of HTMLCollection.\r\n *\r\n * @param {Object}    obj       - An object.\r\n * @param {function}  callback  - A function handling each value. Arguments are value, property and index.\r\n */\n\nfunction each(obj, callback) {\n  keys(obj).some(function (key, index) {\n    return callback(obj[key], key, index);\n  });\n}\n/**\r\n * Return values of the given object as an array.\r\n * IE doesn't support Object.values.\r\n *\r\n * @param {Object} obj - An object.\r\n *\r\n * @return {Array} - An array containing all values of the given object.\r\n */\n\nfunction values(obj) {\n  return keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n/**\r\n * Check if the given subject is object or not.\r\n *\r\n * @param {*} subject - A subject to be verified.\r\n *\r\n * @return {boolean} - True if object, false otherwise.\r\n */\n\nfunction isObject(subject) {\n  return typeof subject === 'object';\n}\n/**\r\n * Merge two objects deeply.\r\n *\r\n * @param {Object} to   - An object where \"from\" is merged.\r\n * @param {Object} from - An object merged to \"to\".\r\n *\r\n * @return {Object} - A merged object.\r\n */\n\nfunction merge(_ref, from) {\n  var to = _extends({}, _ref);\n\n  each(from, function (value, key) {\n    if (isObject(value)) {\n      if (!isObject(to[key])) {\n        to[key] = {};\n      }\n\n      to[key] = merge(to[key], value);\n    } else {\n      to[key] = value;\n    }\n  });\n  return to;\n}\n/**\r\n * Assign all properties \"from\" to \"to\" object.\r\n *\r\n * @param {Object} to   - An object where properties are assigned.\r\n * @param {Object} from - An object whose properties are assigned to \"to\".\r\n *\r\n * @return {Object} - An assigned object.\r\n */\n\nfunction object_assign(to, from) {\n  keys(from).forEach(function (key) {\n    if (!to[key]) {\n      Object.defineProperty(to, key, Object.getOwnPropertyDescriptor(from, key));\n    }\n  });\n  return to;\n}\n;// CONCATENATED MODULE: ./src/js/utils/utils.js\n/**\r\n * A package of some miscellaneous utility functions.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Convert the given value to array.\r\n *\r\n * @param {*} value - Any value.\r\n *\r\n * @return {*[]} - Array containing the given value.\r\n */\n\nfunction toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n/**\r\n * Check if the given value is between min and max.\r\n * Min will be returned when the value is less than min or max will do when greater than max.\r\n *\r\n * @param {number} value - A number to be checked.\r\n * @param {number} m1    - Minimum or maximum number.\r\n * @param {number} m2    - Maximum or minimum number.\r\n *\r\n * @return {number} - A value itself, min or max.\r\n */\n\nfunction between(value, m1, m2) {\n  return Math.min(Math.max(value, m1 > m2 ? m2 : m1), m1 > m2 ? m1 : m2);\n}\n/**\r\n * The sprintf method with minimum functionality.\r\n *\r\n * @param {string}       format       - The string format.\r\n * @param {string|Array} replacements - Replacements accepting multiple arguments.\r\n *\r\n * @returns {string} - Converted string.\r\n */\n\nfunction sprintf(format, replacements) {\n  var i = 0;\n  return format.replace(/%s/g, function () {\n    return toArray(replacements)[i++];\n  });\n}\n/**\r\n * Append px unit to the given subject if necessary.\r\n *\r\n * @param {number|string} value - A value that may not include an unit.\r\n *\r\n * @return {string} - If the value is string, return itself.\r\n *                    If number, do value + \"px\". An empty string, otherwise.\r\n */\n\nfunction unit(value) {\n  var type = typeof value;\n\n  if (type === 'number' && value > 0) {\n    return parseFloat(value) + 'px';\n  }\n\n  return type === 'string' ? value : '';\n}\n/**\r\n * Pad start with 0.\r\n *\r\n * @param {number} number - A number to be filled with 0.\r\n *\r\n * @return {string|number} - Padded number.\r\n */\n\nfunction pad(number) {\n  return number < 10 ? '0' + number : number;\n}\n/**\r\n * Convert the given value to pixel.\r\n *\r\n * @param {Element}       root  - Root element where a dummy div is appended.\r\n * @param {string|number} value - CSS value to be converted, such as 10rem.\r\n *\r\n * @return {number} - Pixel.\r\n */\n\nfunction toPixel(root, value) {\n  if (typeof value === 'string') {\n    var div = create('div', {});\n    applyStyle(div, {\n      position: 'absolute',\n      width: value\n    });\n    append(root, div);\n    value = div.clientWidth;\n    dom_remove(div);\n  }\n\n  return +value || 0;\n}\n;// CONCATENATED MODULE: ./src/js/utils/dom.js\n/**\r\n * Some utility functions related with DOM.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Find the first element matching the given selector.\r\n * Be aware that all selectors after a space are ignored.\r\n *\r\n * @param {Element|Node}  elm       - An ancestor element.\r\n * @param {string}        selector  - DOMString.\r\n *\r\n * @return {Element|null} - A found element or null.\r\n */\n\nfunction find(elm, selector) {\n  return elm ? elm.querySelector(selector.split(' ')[0]) : null;\n}\n/**\r\n * Find a first child having the given tag or class name.\r\n *\r\n * @param {Element} parent         - A parent element.\r\n * @param {string}  tagOrClassName - A tag or class name.\r\n *\r\n * @return {Element|undefined} - A found element on success or undefined on failure.\r\n */\n\nfunction child(parent, tagOrClassName) {\n  return children(parent, tagOrClassName)[0];\n}\n/**\r\n * Return chile elements that matches the provided tag or class name.\r\n *\r\n * @param {Element} parent         - A parent element.\r\n * @param {string}  tagOrClassName - A tag or class name.\r\n *\r\n * @return {Element[]} - Found elements.\r\n */\n\nfunction children(parent, tagOrClassName) {\n  if (parent) {\n    return values(parent.children).filter(function (child) {\n      return hasClass(child, tagOrClassName.split(' ')[0]) || child.tagName === tagOrClassName;\n    });\n  }\n\n  return [];\n}\n/**\r\n * Create an element with some optional attributes.\r\n *\r\n * @param {string} tag   - A tag name.\r\n * @param {Object} attrs - An object any attribute pairs of name and value.\r\n *\r\n * @return {Element} - A created element.\r\n */\n\nfunction create(tag, attrs) {\n  var elm = document.createElement(tag);\n  each(attrs, function (value, key) {\n    return setAttribute(elm, key, value);\n  });\n  return elm;\n}\n/**\r\n * Convert HTML string to DOM node.\r\n *\r\n * @param {string} html - HTML string.\r\n *\r\n * @return {Node} - A created node.\r\n */\n\nfunction domify(html) {\n  var div = create('div', {});\n  div.innerHTML = html;\n  return div.firstChild;\n}\n/**\r\n * Remove a given element from a DOM tree.\r\n *\r\n * @param {Element|Element[]} elms - Element(s) to be removed.\r\n */\n\nfunction dom_remove(elms) {\n  toArray(elms).forEach(function (elm) {\n    if (elm) {\n      var parent = elm.parentElement;\n      parent && parent.removeChild(elm);\n    }\n  });\n}\n/**\r\n * Append a child to a given element.\r\n *\r\n * @param {Element} parent - A parent element.\r\n * @param {Element} child  - An element to be appended.\r\n */\n\nfunction append(parent, child) {\n  if (parent) {\n    parent.appendChild(child);\n  }\n}\n/**\r\n * Insert an element before the reference element.\r\n *\r\n * @param {Element|Node} ref - A reference element.\r\n * @param {Element}      elm - An element to be inserted.\r\n */\n\nfunction before(elm, ref) {\n  if (elm && ref) {\n    var parent = ref.parentElement;\n    parent && parent.insertBefore(elm, ref);\n  }\n}\n/**\r\n * Apply styles to the given element.\r\n *\r\n * @param {Element} elm     - An element where styles are applied.\r\n * @param {Object}  styles  - Object containing styles.\r\n */\n\nfunction applyStyle(elm, styles) {\n  if (elm) {\n    each(styles, function (value, prop) {\n      if (value !== null) {\n        elm.style[prop] = value;\n      }\n    });\n  }\n}\n/**\r\n * Add or remove classes to/from the element.\r\n * This function is for internal usage.\r\n *\r\n * @param {Element}         elm     - An element where classes are added.\r\n * @param {string|string[]} classes - Class names being added.\r\n * @param {boolean}         remove  - Whether to remove or add classes.\r\n */\n\nfunction addOrRemoveClasses(elm, classes, remove) {\n  if (elm) {\n    toArray(classes).forEach(function (name) {\n      if (name) {\n        elm.classList[remove ? 'remove' : 'add'](name);\n      }\n    });\n  }\n}\n/**\r\n * Add classes to the element.\r\n *\r\n * @param {Element}          elm     - An element where classes are added.\r\n * @param {string|string[]}  classes - Class names being added.\r\n */\n\n\nfunction addClass(elm, classes) {\n  addOrRemoveClasses(elm, classes, false);\n}\n/**\r\n * Remove a class from the element.\r\n *\r\n * @param {Element}         elm     - An element where classes are removed.\r\n * @param {string|string[]} classes - A class name being removed.\r\n */\n\nfunction removeClass(elm, classes) {\n  addOrRemoveClasses(elm, classes, true);\n}\n/**\r\n * Verify if the provided element has the class or not.\r\n *\r\n * @param {Element} elm       - An element.\r\n * @param {string}  className - A class name.\r\n *\r\n * @return {boolean} - True if the element has the class or false if not.\r\n */\n\nfunction hasClass(elm, className) {\n  return !!elm && elm.classList.contains(className);\n}\n/**\r\n * Set attribute to the given element.\r\n *\r\n * @param {Element}                 elm   - An element where an attribute is assigned.\r\n * @param {string}                  name  - Attribute name.\r\n * @param {string|number|boolean}   value - Attribute value.\r\n */\n\nfunction setAttribute(elm, name, value) {\n  if (elm) {\n    elm.setAttribute(name, value);\n  }\n}\n/**\r\n * Get attribute from the given element.\r\n *\r\n * @param {Element} elm  - An element where an attribute is assigned.\r\n * @param {string}  name - Attribute name.\r\n *\r\n * @return {string} - The value of the given attribute if available. An empty string if not.\r\n */\n\nfunction getAttribute(elm, name) {\n  return elm ? elm.getAttribute(name) : '';\n}\n/**\r\n * Remove attribute from the given element.\r\n *\r\n * @param {Element|Element[]} elms  - An element where an attribute is removed.\r\n * @param {string|string[]}      names - Attribute name.\r\n */\n\nfunction removeAttribute(elms, names) {\n  toArray(names).forEach(function (name) {\n    toArray(elms).forEach(function (elm) {\n      return elm && elm.removeAttribute(name);\n    });\n  });\n}\n/**\r\n * Return the Rect object of the provided object.\r\n *\r\n * @param {Element} elm - An element.\r\n *\r\n * @return {ClientRect|DOMRect} - A rect object.\r\n */\n\nfunction getRect(elm) {\n  return elm.getBoundingClientRect();\n}\n/**\r\n * Trigger the given callback after all images contained by the element are loaded.\r\n *\r\n * @param {Element}  elm      - Element that may contain images.\r\n * @param {Function} callback - Callback function fired right after all images are loaded.\r\n */\n\nfunction loaded(elm, callback) {\n  var images = elm.querySelectorAll('img');\n  var length = images.length;\n\n  if (length) {\n    var count = 0;\n    each(images, function (img) {\n      img.onload = img.onerror = function () {\n        if (++count === length) {\n          callback();\n        }\n      };\n    });\n  } else {\n    // Trigger the callback immediately if there is no image.\n    callback();\n  }\n}\n;// CONCATENATED MODULE: ./src/js/constants/types.js\n/**\r\n * Export slider types.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Normal slider.\r\n *\r\n * @type {string}\r\n */\nvar SLIDE = 'slide';\n/**\r\n * Loop after the last slide and before the first one.\r\n *\r\n * @type {string}\r\n */\n\nvar LOOP = 'loop';\n/**\r\n * The track doesn't move.\r\n *\r\n * @type {string}\r\n */\n\nvar FADE = 'fade';\n;// CONCATENATED MODULE: ./src/js/transitions/slide/index.js\n/**\r\n * The component for general slide effect transition.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The component for general slide effect transition.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const slide = (function (Splide, Components) {\n  /**\r\n   * Hold the list element.\r\n   *\r\n   * @type {Element}\r\n   */\n  var list;\n  /**\r\n   * Hold the onEnd callback function.\r\n   *\r\n   * @type {function}\r\n   */\n\n  var endCallback;\n  return {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      list = Components.Elements.list;\n      Splide.on('transitionend', function (e) {\n        if (e.target === list && endCallback) {\n          endCallback();\n        }\n      }, list);\n    },\n\n    /**\r\n     * Start transition.\r\n     *\r\n     * @param {number}   destIndex - Destination slide index that might be clone's.\r\n     * @param {number}   newIndex  - New index.\r\n     * @param {number}   prevIndex - Previous index.\r\n     * @param {Object}   coord     - Destination coordinates.\r\n     * @param {function} done      - Callback function must be invoked when transition is completed.\r\n     */\n    start: function start(destIndex, newIndex, prevIndex, coord, done) {\n      var options = Splide.options;\n      var edgeIndex = Components.Controller.edgeIndex;\n      var speed = options.speed;\n      endCallback = done;\n\n      if (Splide.is(SLIDE)) {\n        if (prevIndex === 0 && newIndex >= edgeIndex || prevIndex >= edgeIndex && newIndex === 0) {\n          speed = options.rewindSpeed || speed;\n        }\n      }\n\n      applyStyle(list, {\n        transition: \"transform \" + speed + \"ms \" + options.easing,\n        transform: \"translate(\" + coord.x + \"px,\" + coord.y + \"px)\"\n      });\n    }\n  };\n});\n;// CONCATENATED MODULE: ./src/js/transitions/fade/index.js\n/**\r\n * The component for fade transition.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The component for fade transition.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const fade = (function (Splide, Components) {\n  var Fade = {\n    /**\r\n     * Called when the component is mounted.\r\n     * Apply transition style to the first slide.\r\n     */\n    mount: function mount() {\n      apply(Splide.index);\n    },\n\n    /**\r\n     * Start transition.\r\n     *\r\n     * @param {number}    destIndex - Destination slide index that might be clone's.\r\n     * @param {number}    newIndex  - New index.\r\n     * @param {number}    prevIndex - Previous index.\r\n     * @param {Object}    coord     - Destination coordinates.\r\n     * @param {function}  done      - Callback function must be invoked when transition is completed.\r\n     */\n    start: function start(destIndex, newIndex, prevIndex, coord, done) {\n      var track = Components.Elements.track;\n      applyStyle(track, {\n        height: unit(track.clientHeight)\n      });\n      apply(newIndex);\n      setTimeout(function () {\n        done();\n        applyStyle(track, {\n          height: ''\n        });\n      });\n    }\n  };\n  /**\r\n   * Apply transition style to the slide specified by the given index.\r\n   *\r\n   * @param {number} index - A slide index.\r\n   */\n\n  function apply(index) {\n    var options = Splide.options;\n    applyStyle(Components.Elements.slides[index], {\n      transition: \"opacity \" + options.speed + \"ms \" + options.easing\n    });\n  }\n\n  return Fade;\n});\n;// CONCATENATED MODULE: ./src/js/transitions/index.js\n/**\r\n * Export transition components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n;// CONCATENATED MODULE: ./src/js/core/composer.js\n/**\r\n * Provide a function for composing components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * Compose components.\r\n *\r\n * @param {Splide}   Splide     - Splide instance.\r\n * @param {Object}   Components - Additional components.\r\n * @param {function} Transition - Change component for transition.\r\n *\r\n * @return {Object} - An object containing all components.\r\n */\n\nfunction compose(Splide, Components, Transition) {\n  var components = {};\n  each(Components, function (Component, name) {\n    components[name] = Component(Splide, components, name.toLowerCase());\n  });\n\n  if (!Transition) {\n    Transition = Splide.is(FADE) ? fade : slide;\n  }\n\n  components.Transition = Transition(Splide, components);\n  return components;\n}\n;// CONCATENATED MODULE: ./src/js/utils/error.js\n/**\r\n * Utility functions for outputting logs.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Prefix of an error massage.\r\n *\r\n * @type {string}\r\n */\nvar MESSAGE_PREFIX = '[SPLIDE]';\n/**\r\n * Display an error message on the browser console.\r\n *\r\n * @param {string} message - An error message.\r\n */\n\nfunction error(message) {\n  console.error(MESSAGE_PREFIX + \" \" + message);\n}\n/**\r\n * Check existence of the given object and throw an error if it doesn't.\r\n *\r\n * @throws {Error}\r\n *\r\n * @param {*}      subject - A subject to be confirmed.\r\n * @param {string} message - An error message.\r\n */\n\nfunction exist(subject, message) {\n  if (!subject) {\n    throw new Error(message);\n  }\n}\n;// CONCATENATED MODULE: ./src/js/constants/classes.js\n/**\r\n * Export class names.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * A root class name.\r\n *\r\n * @type {string}\r\n */\nvar ROOT = 'splide';\n/**\r\n * The definition table of all classes for elements.\r\n * They might be modified by options.\r\n *\r\n * @type {Object}\r\n */\n\nvar ELEMENT_CLASSES = {\n  root: ROOT,\n  slider: ROOT + \"__slider\",\n  track: ROOT + \"__track\",\n  list: ROOT + \"__list\",\n  slide: ROOT + \"__slide\",\n  container: ROOT + \"__slide__container\",\n  arrows: ROOT + \"__arrows\",\n  arrow: ROOT + \"__arrow\",\n  prev: ROOT + \"__arrow--prev\",\n  next: ROOT + \"__arrow--next\",\n  pagination: ROOT + \"__pagination\",\n  page: ROOT + \"__pagination__page\",\n  clone: ROOT + \"__slide--clone\",\n  progress: ROOT + \"__progress\",\n  bar: ROOT + \"__progress__bar\",\n  autoplay: ROOT + \"__autoplay\",\n  play: ROOT + \"__play\",\n  pause: ROOT + \"__pause\",\n  spinner: ROOT + \"__spinner\",\n  sr: ROOT + \"__sr\"\n};\n/**\r\n * Definitions of status classes.\r\n *\r\n * @type {Object}\r\n */\n\nvar STATUS_CLASSES = {\n  active: 'is-active',\n  visible: 'is-visible',\n  loading: 'is-loading'\n};\n;// CONCATENATED MODULE: ./src/js/constants/i18n.js\n/**\r\n * Export i18n texts as object.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Texts for i18n.\r\n *\r\n * @type {Object}\r\n */\nvar I18N = {\n  prev: 'Previous slide',\n  next: 'Next slide',\n  first: 'Go to first slide',\n  last: 'Go to last slide',\n  slideX: 'Go to slide %s',\n  pageX: 'Go to page %s',\n  play: 'Start autoplay',\n  pause: 'Pause autoplay'\n};\n;// CONCATENATED MODULE: ./src/js/constants/defaults.js\n/**\r\n * Export default options.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\nvar DEFAULTS = {\n  /**\r\n   * Determine a slider type.\r\n   * - 'slide': Regular slider.\r\n   * - 'loop' : Carousel slider.\r\n   * - 'fade' : Change slides with fade transition. perPage, drag options are ignored.\r\n   *\r\n   * @type {string}\r\n   */\n  type: 'slide',\n\n  /**\r\n   * Whether to rewind a slider before the first slide or after the last one.\r\n   * In \"loop\" mode, this option is ignored.\r\n   *\r\n   * @type {boolean}\r\n   */\n  rewind: false,\n\n  /**\r\n   * Transition speed in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\n  speed: 400,\n\n  /**\r\n   * Transition speed on rewind in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\n  rewindSpeed: 0,\n\n  /**\r\n   * Whether to prevent any actions while a slider is transitioning.\r\n   * If false, navigation, drag and swipe work while the slider is running.\r\n   * Even so, it will be forced to wait for transition in some cases in the loop mode to shift a slider.\r\n   *\r\n   * @type {boolean}\r\n   */\n  waitForTransition: true,\n\n  /**\r\n   * Define slider max width.\r\n   *\r\n   * @type {number}\r\n   */\n  width: 0,\n\n  /**\r\n   * Define slider height.\r\n   *\r\n   * @type {number}\r\n   */\n  height: 0,\n\n  /**\r\n   * Fix width of slides. CSS format is allowed such as 10em, 80% or 80vw.\r\n   * perPage number will be ignored when this option is falsy.\r\n   *\r\n   * @type {number|string}\r\n   */\n  fixedWidth: 0,\n\n  /**\r\n   * Fix height of slides. CSS format is allowed such as 10em, 80vh but % unit is not accepted.\r\n   * heightRatio option will be ignored when this option is falsy.\r\n   *\r\n   * @type {number|string}\r\n   */\n  fixedHeight: 0,\n\n  /**\r\n   * Determine height of slides by ratio to a slider width.\r\n   * This will be ignored when the fixedHeight is provided.\r\n   *\r\n   * @type {number}\r\n   */\n  heightRatio: 0,\n\n  /**\r\n   * If true, slide width will be determined by the element width itself.\r\n   * - perPage/perMove should be 1.\r\n   *\r\n   * @type {boolean}\r\n   */\n  autoWidth: false,\n\n  /**\r\n   * If true, slide height will be determined by the element width itself.\r\n   * - perPage/perMove should be 1.\r\n   *\r\n   * @type {boolean}\r\n   */\n  autoHeight: false,\n\n  /**\r\n   * Determine how many slides should be displayed per page.\r\n   *\r\n   * @type {number}\r\n   */\n  perPage: 1,\n\n  /**\r\n   * Determine how many slides should be moved when a slider goes to next or perv.\r\n   *\r\n   * @type {number}\r\n   */\n  perMove: 0,\n\n  /**\r\n   * Determine manually how many clones should be generated on the left and right side.\r\n   * The total number of clones will be twice of this number.\r\n   *\r\n   * @type {number}\r\n   */\n  clones: 0,\n\n  /**\r\n   * Start index.\r\n   *\r\n   * @type {number}\r\n   */\n  start: 0,\n\n  /**\r\n   * Determine which slide should be focused if there are multiple slides in a page.\r\n   * A string \"center\" is acceptable for centering slides.\r\n   *\r\n   * @type {boolean|number|string}\r\n   */\n  focus: false,\n\n  /**\r\n   * Gap between slides. CSS format is allowed such as 1em.\r\n   *\r\n   * @type {number|string}\r\n   */\n  gap: 0,\n\n  /**\r\n   * Set padding-left/right in horizontal mode or padding-top/bottom in vertical one.\r\n   * Give a single value to set a same size for both sides or\r\n   * do an object for different sizes.\r\n   * Also, CSS format is allowed such as 1em.\r\n   *\r\n   * @example\r\n   * - 10: Number\r\n   * - '1em': CSS format.\r\n   * - { left: 0, right: 20 }: Object for different sizes in horizontal mode.\r\n   * - { top: 0, bottom: 20 }: Object for different sizes in vertical mode.\r\n   *\r\n   * @type {number|string|Object}\r\n   */\n  padding: 0,\n\n  /**\r\n   * Whether to append arrows.\r\n   *\r\n   * @type {boolean}\r\n   */\n  arrows: true,\n\n  /**\r\n   * Change the arrow SVG path like 'm7.61 0.807-2.12...'.\r\n   *\r\n   * @type {string}\r\n   */\n  arrowPath: '',\n\n  /**\r\n   * Whether to append pagination(indicator dots) or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  pagination: true,\n\n  /**\r\n   * Activate autoplay.\r\n   *\r\n   * @type {boolean}\r\n   */\n  autoplay: false,\n\n  /**\r\n   * Autoplay interval in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\n  interval: 5000,\n\n  /**\r\n   * Whether to stop autoplay when a slider is hovered.\r\n   *\r\n   * @type {boolean}\r\n   */\n  pauseOnHover: true,\n\n  /**\r\n   * Whether to stop autoplay when a slider elements are focused.\r\n   * True is recommended for accessibility.\r\n   *\r\n   * @type {boolean}\r\n   */\n  pauseOnFocus: true,\n\n  /**\r\n   * Whether to reset progress of the autoplay timer when resumed.\r\n   *\r\n   * @type {boolean}\r\n   */\n  resetProgress: true,\n\n  /**\r\n   * Loading images lazily.\r\n   * Image src must be provided by a data-splide-lazy attribute.\r\n   *\r\n   * - false: Do nothing.\r\n   * - 'nearby': Only images around an active slide will be loaded.\r\n   * - 'sequential': All images will be sequentially loaded.\r\n   *\r\n   * @type {boolean|string}\r\n   */\n  lazyLoad: false,\n\n  /**\r\n   * This option works only when a lazyLoad option is \"nearby\".\r\n   * Determine how many pages(not slides) around an active slide should be loaded beforehand.\r\n   *\r\n   * @type {number}\r\n   */\n  preloadPages: 1,\n\n  /**\r\n   * Easing for CSS transition. For example, linear, ease or cubic-bezier().\r\n   *\r\n   * @type {string}\r\n   */\n  easing: 'cubic-bezier(.42,.65,.27,.99)',\n\n  /**\r\n   * Whether to enable keyboard shortcuts\r\n   * - true or 'global': Listen to keydown event of the document.\r\n   * - 'focused': Listen to the keydown event of the slider root element. tabindex=\"0\" will be added to the element.\r\n   * - false: Disable keyboard shortcuts.\r\n   *\r\n   * @type {boolean|string}\r\n   */\n  keyboard: 'global',\n\n  /**\r\n   * Whether to allow mouse drag and touch swipe.\r\n   *\r\n   * @type {boolean}\r\n   */\n  drag: true,\n\n  /**\r\n   * The angle threshold for drag.\r\n   * The slider starts moving only when the drag angle is less than this threshold.\r\n   *\r\n   * @type {number}\r\n   */\n  dragAngleThreshold: 30,\n\n  /**\r\n   * Distance threshold for determining if the action is \"flick\" or \"swipe\".\r\n   * When a drag distance is over this value, the action will be treated as \"swipe\", not \"flick\".\r\n   *\r\n   * @type {number}\r\n   */\n  swipeDistanceThreshold: 150,\n\n  /**\r\n   * Velocity threshold for determining if the action is \"flick\" or \"swipe\".\r\n   * Around 0.5 is recommended.\r\n   *\r\n   * @type {number}\r\n   */\n  flickVelocityThreshold: .6,\n\n  /**\r\n   * Determine power of flick. The larger number this is, the farther a slider runs by flick.\r\n   * Around 500 is recommended.\r\n   *\r\n   * @type {number}\r\n   */\n  flickPower: 600,\n\n  /**\r\n   * Limit a number of pages to move by flick.\r\n   *\r\n   * @type {number}\r\n   */\n  flickMaxPages: 1,\n\n  /**\r\n   * Slider direction.\r\n   * - 'ltr': Left to right.\r\n   * - 'rtl': Right to left.\r\n   * - 'ttb': Top to bottom.\r\n   *\r\n   * @type {string}\r\n   */\n  direction: 'ltr',\n\n  /**\r\n   * Set img src to background-image of its parent element.\r\n   * Images with various sizes can be displayed as same dimension without cropping work.\r\n   * fixedHeight or heightRatio is required.\r\n   *\r\n   * @type {boolean}\r\n   */\n  cover: false,\n\n  /**\r\n   * Whether to enable accessibility(aria and screen reader texts) or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  accessibility: true,\n\n  /**\r\n   * Whether to add tabindex=\"0\" to visible slides or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  slideFocus: true,\n\n  /**\r\n   * Determine if a slider is navigation for another.\r\n   * Use \"sync\" API to synchronize two sliders.\r\n   *\r\n   * @type {boolean}\r\n   */\n  isNavigation: false,\n\n  /**\r\n   * Whether to trim spaces before the fist slide or after the last one when \"focus\" is not 0.\r\n   *\r\n   * @type {boolean}\r\n   */\n  trimSpace: true,\n\n  /**\r\n   * The \"is-active\" class is added after transition as default.\r\n   * If true, it will be added before move.\r\n   *\r\n   * @type {boolean}\r\n   */\n  updateOnMove: false,\n\n  /**\r\n   * Throttle duration in milliseconds for the resize event.\r\n   *\r\n   * @type {number}\r\n   */\n  throttle: 100,\n\n  /**\r\n   * Whether to destroy a slider or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  destroy: false,\n\n  /**\r\n   * Options for specific breakpoints.\r\n   *\r\n   * @example\r\n   * {\r\n   *   1000: {\r\n   *     perPage: 3,\r\n   *     gap: 20\r\n   *   },\r\n   *   600: {\r\n   *     perPage: 1,\r\n   *     gap: 5,\r\n   *   }\r\n   * }\r\n   *\r\n   * @type {boolean|Object}\r\n   */\n  breakpoints: false,\n\n  /**\r\n   * Collection of class names.\r\n   *\r\n   * @see ./classes.js\r\n   *\r\n   * @type {Object}\r\n   */\n  classes: ELEMENT_CLASSES,\n\n  /**\r\n   * Collection of i18n texts.\r\n   *\r\n   * @see ./i18n.js\r\n   *\r\n   * @type {Object}\r\n   */\n  i18n: I18N\n};\n;// CONCATENATED MODULE: ./src/js/constants/states.js\n/**\r\n * Export state constants.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Splide has been just created.\r\n *\r\n * @type {number}\r\n */\nvar CREATED = 1;\n/**\r\n * All components have been mounted and initialized.\r\n *\r\n * @type {number}\r\n */\n\nvar MOUNTED = 2;\n/**\r\n * Splide is ready for transition.\r\n *\r\n * @type {number}\r\n */\n\nvar IDLE = 3;\n/**\r\n * Splide is moving.\r\n *\r\n * @type {number}\r\n */\n\nvar MOVING = 4;\n/**\r\n * Splide is moving.\r\n *\r\n * @type {number}\r\n */\n\nvar DESTROYED = 5;\n;// CONCATENATED MODULE: ./src/js/splide.js\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * The main class for applying Splide to an element.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n\n\n/**\r\n * The main class for applying Splide to an element,\r\n * providing some APIs to control the behavior.\r\n */\n\nvar Splide = /*#__PURE__*/function () {\n  /**\r\n   * Splide constructor.\r\n   *\r\n   * @throws {Error} When the given root element or selector is invalid.\r\n   *\r\n   * @param {Element|string}  root       - A selector for a root element or an element itself.\r\n   * @param {Object}          options    - Optional. Options to change default behaviour.\r\n   * @param {Object}          Components - Optional. Components.\r\n   */\n  function Splide(root, options, Components) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (Components === void 0) {\n      Components = {};\n    }\n\n    this.root = root instanceof Element ? root : document.querySelector(root);\n    exist(this.root, 'An invalid element/selector was given.');\n    this.Components = null;\n    this.Event = core_event();\n    this.State = state(CREATED);\n    this.STATES = states_namespaceObject;\n    this._o = merge(DEFAULTS, options);\n    this._i = 0;\n    this._c = Components;\n    this._e = {}; // Extensions\n\n    this._t = null; // Transition\n  }\n  /**\r\n   * Compose and mount components.\r\n   *\r\n   * @param {Object}   Extensions - Optional. Additional components.\r\n   * @param {function} Transition - Optional. Set a custom transition component.\r\n   *\r\n   * @return {Splide|undefined} - This instance or undefined if an exception occurred.\r\n   */\n\n\n  var _proto = Splide.prototype;\n\n  _proto.mount = function mount(Extensions, Transition) {\n    var _this = this;\n\n    if (Extensions === void 0) {\n      Extensions = this._e;\n    }\n\n    if (Transition === void 0) {\n      Transition = this._t;\n    }\n\n    // Reset the state.\n    this.State.set(CREATED);\n    this._e = Extensions;\n    this._t = Transition;\n    this.Components = compose(this, merge(this._c, Extensions), Transition);\n\n    try {\n      each(this.Components, function (component, key) {\n        var required = component.required;\n\n        if (required === undefined || required) {\n          component.mount && component.mount();\n        } else {\n          delete _this.Components[key];\n        }\n      });\n    } catch (e) {\n      error(e.message);\n      return;\n    }\n\n    var State = this.State;\n    State.set(MOUNTED);\n    each(this.Components, function (component) {\n      component.mounted && component.mounted();\n    });\n    this.emit('mounted');\n    State.set(IDLE);\n    this.emit('ready');\n    applyStyle(this.root, {\n      visibility: 'visible'\n    });\n    this.on('move drag', function () {\n      return State.set(MOVING);\n    }).on('moved dragged', function () {\n      return State.set(IDLE);\n    });\n    return this;\n  }\n  /**\r\n   * Set sync target.\r\n   *\r\n   * @param {Splide} splide - A Splide instance.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\n  ;\n\n  _proto.sync = function sync(splide) {\n    this.sibling = splide;\n    return this;\n  }\n  /**\r\n   * Register callback fired on the given event(s).\r\n   *\r\n   * @param {string}   events  - An event name. Use space to separate multiple events.\r\n   *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\r\n   * @param {function} handler - A callback function.\r\n   * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\r\n   * @param {Object}   options - Optional. Options for addEventListener.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\n  ;\n\n  _proto.on = function on(events, handler, elm, options) {\n    if (elm === void 0) {\n      elm = null;\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.Event.on(events, handler, elm, options);\n    return this;\n  }\n  /**\r\n   * Unsubscribe the given event.\r\n   *\r\n   * @param {string}  events - A event name.\r\n   * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\n  ;\n\n  _proto.off = function off(events, elm) {\n    if (elm === void 0) {\n      elm = null;\n    }\n\n    this.Event.off(events, elm);\n    return this;\n  }\n  /**\r\n   * Emit an event.\r\n   *\r\n   * @param {string} event - An event name.\r\n   * @param {*}      args  - Any number of arguments passed to handlers.\r\n   */\n  ;\n\n  _proto.emit = function emit(event) {\n    var _this$Event;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    (_this$Event = this.Event).emit.apply(_this$Event, [event].concat(args));\n\n    return this;\n  }\n  /**\r\n   * Go to the slide specified by the given control.\r\n   *\r\n   * @param {string|number} control - A control pattern.\r\n   * @param {boolean}       wait    - Optional. Whether to wait for transition.\r\n   */\n  ;\n\n  _proto.go = function go(control, wait) {\n    if (wait === void 0) {\n      wait = this.options.waitForTransition;\n    }\n\n    if (this.State.is(IDLE) || this.State.is(MOVING) && !wait) {\n      this.Components.Controller.go(control, false);\n    }\n\n    return this;\n  }\n  /**\r\n   * Verify whether the slider type is the given one or not.\r\n   *\r\n   * @param {string} type - A slider type.\r\n   *\r\n   * @return {boolean} - True if the slider type is the provided type or false if not.\r\n   */\n  ;\n\n  _proto.is = function is(type) {\n    return type === this._o.type;\n  }\n  /**\r\n   * Insert a slide.\r\n   *\r\n   * @param {Element|string} slide - A slide element to be added.\r\n   * @param {number}         index - A slide will be added at the position.\r\n   */\n  ;\n\n  _proto.add = function add(slide, index) {\n    if (index === void 0) {\n      index = -1;\n    }\n\n    this.Components.Elements.add(slide, index, this.refresh.bind(this));\n    return this;\n  }\n  /**\r\n   * Remove the slide designated by the index.\r\n   *\r\n   * @param {number} index - A slide index.\r\n   */\n  ;\n\n  _proto.remove = function remove(index) {\n    this.Components.Elements.remove(index);\n    this.refresh();\n    return this;\n  }\n  /**\r\n   * Destroy all Slide objects and clones and recreate them again.\r\n   */\n  ;\n\n  _proto.refresh = function refresh() {\n    this.emit('refresh:before').emit('refresh').emit('resize');\n    return this;\n  }\n  /**\r\n   * Destroy the Splide.\r\n   * \"Completely\" boolean is mainly for breakpoints.\r\n   *\r\n   * @param {boolean} completely - Destroy completely.\r\n   */\n  ;\n\n  _proto.destroy = function destroy(completely) {\n    var _this2 = this;\n\n    if (completely === void 0) {\n      completely = true;\n    }\n\n    // Postpone destroy because it should be done after mount.\n    if (this.State.is(CREATED)) {\n      this.on('ready', function () {\n        return _this2.destroy(completely);\n      });\n      return;\n    }\n\n    values(this.Components).reverse().forEach(function (component) {\n      component.destroy && component.destroy(completely);\n    });\n    this.emit('destroy', completely); // Destroy all event handlers, including ones for native events.\n\n    this.Event.destroy();\n    this.State.set(DESTROYED);\n    return this;\n  }\n  /**\r\n   * Return the current slide index.\r\n   *\r\n   * @return {number} - The current slide index.\r\n   // */\n  ;\n\n  _createClass(Splide, [{\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Set the current slide index.\r\n     *\r\n     * @param {number|string} index - A new index.\r\n     */\n    ,\n    set: function set(index) {\n      this._i = parseInt(index);\n    }\n    /**\r\n     * Return length of slides.\r\n     * This is an alias of Elements.length.\r\n     *\r\n     * @return {number} - A number of slides.\r\n     */\n\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.Components.Elements.length;\n    }\n    /**\r\n     * Return options.\r\n     *\r\n     * @return {Object} - Options object.\r\n     */\n\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Set options with merging the given object to the current one.\r\n     *\r\n     * @param {Object} options - New options.\r\n     */\n    ,\n    set: function set(options) {\n      var created = this.State.is(CREATED);\n\n      if (!created) {\n        this.emit('update');\n      }\n\n      this._o = merge(this._o, options);\n\n      if (!created) {\n        this.emit('updated', this._o);\n      }\n    }\n    /**\r\n     * Return the class list.\r\n     * This is an alias of Splide.options.classList.\r\n     *\r\n     * @return {Object} - An object containing all class list.\r\n     */\n\n  }, {\n    key: \"classes\",\n    get: function get() {\n      return this._o.classes;\n    }\n    /**\r\n     * Return the i18n strings.\r\n     * This is an alias of Splide.options.i18n.\r\n     *\r\n     * @return {Object} - An object containing all i18n strings.\r\n     */\n\n  }, {\n    key: \"i18n\",\n    get: function get() {\n      return this._o.i18n;\n    }\n  }]);\n\n  return Splide;\n}();\n\n\n;// CONCATENATED MODULE: ./src/js/components/options/index.js\n/**\r\n * The component for initializing options.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The component for initializing options.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const options = (function (Splide) {\n  /**\r\n   * Retrieve options from the data attribute.\r\n   * Note that IE10 doesn't support dataset property.\r\n   *\r\n   * @type {string}\r\n   */\n  var options = getAttribute(Splide.root, 'data-splide');\n\n  if (options) {\n    try {\n      Splide.options = JSON.parse(options);\n    } catch (e) {\n      error(e.message);\n    }\n  }\n\n  return {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      if (Splide.State.is(CREATED)) {\n        Splide.index = Splide.options.start;\n      }\n    }\n  };\n});\n;// CONCATENATED MODULE: ./src/js/constants/directions.js\n/**\r\n * Export layout modes.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Enumerate slides from left to right.\r\n *\r\n * @type {string}\r\n */\nvar LTR = 'ltr';\n/**\r\n * Enumerate slides from right to left.\r\n *\r\n * @type {string}\r\n */\n\nvar RTL = 'rtl';\n/**\r\n * Enumerate slides in a col.\r\n *\r\n * @type {string}\r\n */\n\nvar TTB = 'ttb';\n;// CONCATENATED MODULE: ./src/js/components/elements/slide.js\n/**\r\n * The sub component for handling each slide.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n/**\r\n * Events for restoring original styles.\r\n *\r\n * @type {string}\r\n */\n\nvar STYLE_RESTORE_EVENTS = 'update.slide';\n/**\r\n * The sub component for handling each slide.\r\n *\r\n * @param {Splide}  Splide    - A Splide instance.\r\n * @param {number}  index     - An unique slide index.\r\n * @param {number}  realIndex - Clones should pass a real slide index.\r\n * @param {Element} slide     - A slide element.\r\n *\r\n * @return {Object} - The sub component object.\r\n */\n\n/* harmony default export */ const elements_slide = (function (Splide, index, realIndex, slide) {\n  /**\r\n   * Whether to update \"is-active\" class before or after transition.\r\n   *\r\n   * @type {boolean}\r\n   */\n  var updateOnMove = Splide.options.updateOnMove;\n  /**\r\n   * Events when the slide status is updated.\r\n   * Append a namespace to remove listeners later.\r\n   *\r\n   * @type {string}\r\n   */\n\n  var STATUS_UPDATE_EVENTS = 'ready.slide updated.slide resized.slide moved.slide' + (updateOnMove ? ' move.slide' : '');\n  /**\r\n   * Slide sub component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Slide = {\n    /**\r\n     * Slide element.\r\n     *\r\n     * @type {Element}\r\n     */\n    slide: slide,\n\n    /**\r\n     * Slide index.\r\n     *\r\n     * @type {number}\r\n     */\n    index: index,\n\n    /**\r\n     * Real index for clones.\r\n     *\r\n     * @type {number}\r\n     */\n    realIndex: realIndex,\n\n    /**\r\n     * Container element if available.\r\n     *\r\n     * @type {Element|undefined}\r\n     */\n    container: child(slide, Splide.classes.container),\n\n    /**\r\n     * Whether this is a cloned slide or not.\r\n     *\r\n     * @type {boolean}\r\n     */\n    isClone: realIndex > -1,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      if (!this.isClone) {\n        slide.id = Splide.root.id + \"-slide\" + pad(index + 1);\n      }\n\n      Splide.on(STATUS_UPDATE_EVENTS, function () {\n        return _this.update();\n      }).on(STYLE_RESTORE_EVENTS, restoreStyles).on('click', function () {\n        return Splide.emit('click', _this);\n      }, slide);\n      /*\r\n       * Add \"is-active\" class to a clone element temporarily\r\n       * and it will be removed on \"moved\" event.\r\n       */\n\n      if (updateOnMove) {\n        Splide.on('move.slide', function (newIndex) {\n          if (newIndex === realIndex) {\n            _update(true, false);\n          }\n        });\n      } // Make sure the slide is shown.\n\n\n      applyStyle(slide, {\n        display: ''\n      }); // Hold the original styles.\n\n      this.styles = getAttribute(slide, 'style') || '';\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      Splide.off(STATUS_UPDATE_EVENTS).off(STYLE_RESTORE_EVENTS).off('click', slide);\n      removeClass(slide, values(STATUS_CLASSES));\n      restoreStyles();\n      removeAttribute(this.container, 'style');\n    },\n\n    /**\r\n     * Update active and visible status.\r\n     */\n    update: function update() {\n      _update(this.isActive(), false);\n\n      _update(this.isVisible(), true);\n    },\n\n    /**\r\n     * Check whether this slide is active or not.\r\n     *\r\n     * @return {boolean} - True if the slide is active or false if not.\r\n     */\n    isActive: function isActive() {\n      return Splide.index === index;\n    },\n\n    /**\r\n     * Check whether this slide is visible in the viewport or not.\r\n     *\r\n     * @return {boolean} - True if the slide is visible or false if not.\r\n     */\n    isVisible: function isVisible() {\n      var active = this.isActive();\n\n      if (Splide.is(FADE) || active) {\n        return active;\n      }\n\n      var ceil = Math.ceil;\n      var trackRect = getRect(Splide.Components.Elements.track);\n      var slideRect = getRect(slide);\n\n      if (Splide.options.direction === TTB) {\n        return trackRect.top <= slideRect.top && slideRect.bottom <= ceil(trackRect.bottom);\n      }\n\n      return trackRect.left <= slideRect.left && slideRect.right <= ceil(trackRect.right);\n    },\n\n    /**\r\n     * Calculate how far this slide is from another slide and\r\n     * return true if the distance is within the given number.\r\n     *\r\n     * @param {number} from   - Index of a target slide.\r\n     * @param {number} within - True if the slide is within this number.\r\n     *\r\n     * @return {boolean} - True if the slide is within the number or false otherwise.\r\n     */\n    isWithin: function isWithin(from, within) {\n      var diff = Math.abs(from - index);\n\n      if (!Splide.is(SLIDE) && !this.isClone) {\n        diff = Math.min(diff, Splide.length - diff);\n      }\n\n      return diff < within;\n    }\n  };\n  /**\r\n   * Update classes for activity or visibility.\r\n   *\r\n   * @param {boolean} active        - Is active/visible or not.\r\n   * @param {boolean} forVisibility - Toggle classes for activity or visibility.\r\n   */\n\n  function _update(active, forVisibility) {\n    var type = forVisibility ? 'visible' : 'active';\n    var className = STATUS_CLASSES[type];\n\n    if (active) {\n      addClass(slide, className);\n      Splide.emit(\"\" + type, Slide);\n    } else {\n      if (hasClass(slide, className)) {\n        removeClass(slide, className);\n        Splide.emit(\"\" + (forVisibility ? 'hidden' : 'inactive'), Slide);\n      }\n    }\n  }\n  /**\r\n   * Restore the original styles.\r\n   */\n\n\n  function restoreStyles() {\n    setAttribute(slide, 'style', Slide.styles);\n  }\n\n  return Slide;\n});\n;// CONCATENATED MODULE: ./src/js/components/elements/index.js\n/**\r\n * The component for main elements.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n/**\r\n * The property name for UID stored in a window object.\r\n *\r\n * @type {string}\r\n */\n\nvar UID_NAME = 'uid';\n/**\r\n * The component for main elements.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const components_elements = (function (Splide, Components) {\n  /**\r\n   * Hold the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n  var root = Splide.root;\n  /**\r\n   * Hold the class list.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var classes = Splide.classes;\n  /**\r\n   * Store Slide objects.\r\n   *\r\n   * @type {Array}\r\n   */\n\n  var Slides = [];\n  /*\r\n   * Assign unique ID to the root element if it doesn't have the one.\r\n   * Note that IE doesn't support padStart() to fill the uid by 0.\r\n   */\n\n  if (!root.id) {\n    window.splide = window.splide || {};\n    var uid = window.splide[UID_NAME] || 0;\n    window.splide[UID_NAME] = ++uid;\n    root.id = \"splide\" + pad(uid);\n  }\n  /**\r\n   * Elements component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n\n  var Elements = {\n    /**\r\n     * Called when the component is mounted.\r\n     * Collect main elements and store them as member properties.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      this.init();\n      Splide.on('refresh', function () {\n        _this.destroy();\n\n        _this.init();\n      }).on('updated', function () {\n        removeClass(root, getClasses());\n        addClass(root, getClasses());\n      });\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      Slides.forEach(function (Slide) {\n        Slide.destroy();\n      });\n      Slides = [];\n      removeClass(root, getClasses());\n    },\n\n    /**\r\n     * Initialization.\r\n     */\n    init: function init() {\n      var _this2 = this;\n\n      collect();\n      addClass(root, getClasses());\n      this.slides.forEach(function (slide, index) {\n        _this2.register(slide, index, -1);\n      });\n    },\n\n    /**\r\n     * Register a slide to create a Slide object and handle its behavior.\r\n     *\r\n     * @param {Element} slide     - A slide element.\r\n     * @param {number}  index     - A unique index. This can be negative.\r\n     * @param {number}  realIndex - A real index for clones. Set -1 for real slides.\r\n     */\n    register: function register(slide, index, realIndex) {\n      var SlideObject = elements_slide(Splide, index, realIndex, slide);\n      SlideObject.mount();\n      Slides.push(SlideObject);\n    },\n\n    /**\r\n     * Return the Slide object designated by the index.\r\n     * Note that \"find\" is not supported by IE.\r\n     *\r\n     * @return {Object|undefined} - A Slide object if available. Undefined if not.\r\n     */\n    getSlide: function getSlide(index) {\n      return Slides.filter(function (Slide) {\n        return Slide.index === index;\n      })[0];\n    },\n\n    /**\r\n     * Return all Slide objects.\r\n     *\r\n     * @param {boolean} includeClones - Whether to include cloned slides or not.\r\n     *\r\n     * @return {Object[]} - Slide objects.\r\n     */\n    getSlides: function getSlides(includeClones) {\n      return includeClones ? Slides : Slides.filter(function (Slide) {\n        return !Slide.isClone;\n      });\n    },\n\n    /**\r\n     * Return Slide objects belonging to the given page.\r\n     *\r\n     * @param {number} page - A page number.\r\n     *\r\n     * @return {Object[]} - An array containing Slide objects.\r\n     */\n    getSlidesByPage: function getSlidesByPage(page) {\n      var idx = Components.Controller.toIndex(page);\n      var options = Splide.options;\n      var max = options.focus !== false ? 1 : options.perPage;\n      return Slides.filter(function (_ref) {\n        var index = _ref.index;\n        return idx <= index && index < idx + max;\n      });\n    },\n\n    /**\r\n     * Insert a slide to a slider.\r\n     * Need to refresh Splide after adding a slide.\r\n     *\r\n     * @param {Node|string} slide    - A slide element to be added.\r\n     * @param {number}      index    - A slide will be added at the position.\r\n     * @param {Function}    callback - Called right after the slide is added to the DOM tree.\r\n     */\n    add: function add(slide, index, callback) {\n      if (typeof slide === 'string') {\n        slide = domify(slide);\n      }\n\n      if (slide instanceof Element) {\n        var ref = this.slides[index]; // This will be removed in mount() of a Slide component.\n\n        applyStyle(slide, {\n          display: 'none'\n        });\n\n        if (ref) {\n          before(slide, ref);\n          this.slides.splice(index, 0, slide);\n        } else {\n          append(this.list, slide);\n          this.slides.push(slide);\n        }\n\n        loaded(slide, function () {\n          callback && callback(slide);\n        });\n      }\n    },\n\n    /**\r\n     * Remove a slide from a slider.\r\n     * Need to refresh Splide after removing a slide.\r\n     *\r\n     * @param index - Slide index.\r\n     */\n    remove: function remove(index) {\n      dom_remove(this.slides.splice(index, 1)[0]);\n    },\n\n    /**\r\n     * Trigger the provided callback for each Slide object.\r\n     *\r\n     * @param {Function} callback - A callback function. The first argument will be the Slide object.\r\n     */\n    each: function each(callback) {\n      Slides.forEach(callback);\n    },\n\n    /**\r\n     * Return slides length without clones.\r\n     *\r\n     * @return {number} - Slide length.\r\n     */\n    get length() {\n      return this.slides.length;\n    },\n\n    /**\r\n     * Return \"SlideObjects\" length including clones.\r\n     *\r\n     * @return {number} - Slide length including clones.\r\n     */\n    get total() {\n      return Slides.length;\n    }\n\n  };\n  /**\r\n   * Collect elements.\r\n   */\n\n  function collect() {\n    Elements.slider = child(root, classes.slider);\n    Elements.track = find(root, \".\" + classes.track);\n    Elements.list = child(Elements.track, classes.list);\n    exist(Elements.track && Elements.list, 'Track or list was not found.');\n    Elements.slides = children(Elements.list, classes.slide);\n    var arrows = findParts(classes.arrows);\n    Elements.arrows = {\n      prev: find(arrows, \".\" + classes.prev),\n      next: find(arrows, \".\" + classes.next)\n    };\n    var autoplay = findParts(classes.autoplay);\n    Elements.bar = find(findParts(classes.progress), \".\" + classes.bar);\n    Elements.play = find(autoplay, \".\" + classes.play);\n    Elements.pause = find(autoplay, \".\" + classes.pause);\n    Elements.track.id = Elements.track.id || root.id + \"-track\";\n    Elements.list.id = Elements.list.id || root.id + \"-list\";\n  }\n  /**\r\n   * Return class names for the root element.\r\n   */\n\n\n  function getClasses() {\n    var rootClass = classes.root;\n    var options = Splide.options;\n    return [rootClass + \"--\" + options.type, rootClass + \"--\" + options.direction, options.drag ? rootClass + \"--draggable\" : '', options.isNavigation ? rootClass + \"--nav\" : '', STATUS_CLASSES.active];\n  }\n  /**\r\n   * Find parts only from children of the root or track.\r\n   *\r\n   * @return {Element} - A found element or undefined.\r\n   */\n\n\n  function findParts(className) {\n    return child(root, className) || child(Elements.slider, className);\n  }\n\n  return Elements;\n});\n;// CONCATENATED MODULE: ./src/js/components/controller/index.js\n/**\r\n * The component for controlling the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\nvar floor = Math.floor;\n/**\r\n * The component for controlling the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const controller = (function (Splide, Components) {\n  /**\r\n   * Store current options.\r\n   *\r\n   * @type {Object}\r\n   */\n  var options;\n  /**\r\n   * True if the slide is LOOP mode.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isLoop;\n  /**\r\n   * Controller component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Controller = {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      options = Splide.options;\n      isLoop = Splide.is(LOOP);\n      bind();\n    },\n\n    /**\r\n     * Make track run by the given control.\r\n     * - \"+{i}\" : Increment the slide index by i.\r\n     * - \"-{i}\" : Decrement the slide index by i.\r\n     * - \"{i}\"  : Go to the slide whose index is i.\r\n     * - \">\"    : Go to next page.\r\n     * - \"<\"    : Go to prev page.\r\n     * - \">{i}\" : Go to page i.\r\n     *\r\n     * @param {string|number} control  - A control pattern.\r\n     * @param {boolean}       silently - Go to the destination without event emission.\r\n     */\n    go: function go(control, silently) {\n      var destIndex = this.trim(this.parse(control));\n      Components.Track.go(destIndex, this.rewind(destIndex), silently);\n    },\n\n    /**\r\n     * Parse the given control and return the destination index for the track.\r\n     *\r\n     * @param {string} control - A control target pattern.\r\n     *\r\n     * @return {number} - A parsed target.\r\n     */\n    parse: function parse(control) {\n      var index = Splide.index;\n      var matches = String(control).match(/([+\\-<>]+)(\\d+)?/);\n      var indicator = matches ? matches[1] : '';\n      var number = matches ? parseInt(matches[2]) : 0;\n\n      switch (indicator) {\n        case '+':\n          index += number || 1;\n          break;\n\n        case '-':\n          index -= number || 1;\n          break;\n\n        case '>':\n        case '<':\n          index = parsePage(number, index, indicator === '<');\n          break;\n\n        default:\n          index = parseInt(control);\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Compute index from the given page number.\r\n     *\r\n     * @param {number} page - Page number.\r\n     *\r\n     * @return {number} - A computed page number.\r\n     */\n    toIndex: function toIndex(page) {\n      if (hasFocus()) {\n        return page;\n      }\n\n      var length = Splide.length;\n      var perPage = options.perPage;\n      var index = page * perPage;\n      index = index - (this.pageLength * perPage - length) * floor(index / length); // Adjustment for the last page.\n\n      if (length - perPage <= index && index < length) {\n        index = length - perPage;\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Compute page number from the given slide index.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - A computed page number.\r\n     */\n    toPage: function toPage(index) {\n      if (hasFocus()) {\n        return index;\n      }\n\n      var length = Splide.length;\n      var perPage = options.perPage; // Make the last \"perPage\" number of slides belong to the last page.\n\n      if (length - perPage <= index && index < length) {\n        return floor((length - 1) / perPage);\n      }\n\n      return floor(index / perPage);\n    },\n\n    /**\r\n     * Trim the given index according to the current mode.\r\n     * Index being returned could be less than 0 or greater than the length in Loop mode.\r\n     *\r\n     * @param {number} index - An index being trimmed.\r\n     *\r\n     * @return {number} - A trimmed index.\r\n     */\n    trim: function trim(index) {\n      if (!isLoop) {\n        index = options.rewind ? this.rewind(index) : between(index, 0, this.edgeIndex);\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Rewind the given index if it's out of range.\r\n     *\r\n     * @param {number} index - An index.\r\n     *\r\n     * @return {number} - A rewound index.\r\n     */\n    rewind: function rewind(index) {\n      var edge = this.edgeIndex;\n\n      if (isLoop) {\n        while (index > edge) {\n          index -= edge + 1;\n        }\n\n        while (index < 0) {\n          index += edge + 1;\n        }\n      } else {\n        if (index > edge) {\n          index = 0;\n        } else if (index < 0) {\n          index = edge;\n        }\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Check if the direction is \"rtl\" or not.\r\n     *\r\n     * @return {boolean} - True if \"rtl\" or false if not.\r\n     */\n    isRtl: function isRtl() {\n      return options.direction === RTL;\n    },\n\n    /**\r\n     * Return the page length.\r\n     *\r\n     * @return {number} - Max page number.\r\n     */\n    get pageLength() {\n      var length = Splide.length;\n      return hasFocus() ? length : Math.ceil(length / options.perPage);\n    },\n\n    /**\r\n     * Return the edge index.\r\n     *\r\n     * @return {number} - Edge index.\r\n     */\n    get edgeIndex() {\n      var length = Splide.length;\n\n      if (!length) {\n        return 0;\n      }\n\n      if (hasFocus() || options.isNavigation || isLoop) {\n        return length - 1;\n      }\n\n      return length - options.perPage;\n    },\n\n    /**\r\n     * Return the index of the previous slide.\r\n     *\r\n     * @return {number} - The index of the previous slide if available. -1 otherwise.\r\n     */\n    get prevIndex() {\n      var prev = Splide.index - 1;\n\n      if (isLoop || options.rewind) {\n        prev = this.rewind(prev);\n      }\n\n      return prev > -1 ? prev : -1;\n    },\n\n    /**\r\n     * Return the index of the next slide.\r\n     *\r\n     * @return {number} - The index of the next slide if available. -1 otherwise.\r\n     */\n    get nextIndex() {\n      var next = Splide.index + 1;\n\n      if (isLoop || options.rewind) {\n        next = this.rewind(next);\n      }\n\n      return Splide.index < next && next <= this.edgeIndex || next === 0 ? next : -1;\n    }\n\n  };\n  /**\r\n   * Listen to some events.\r\n   */\n\n  function bind() {\n    Splide.on('move', function (newIndex) {\n      Splide.index = newIndex;\n    }).on('updated refresh', function (newOptions) {\n      options = newOptions || options;\n      Splide.index = between(Splide.index, 0, Controller.edgeIndex);\n    });\n  }\n  /**\r\n   * Verify if the focus option is available or not.\r\n   *\r\n   * @return {boolean} - True if a slider has the focus option.\r\n   */\n\n\n  function hasFocus() {\n    return options.focus !== false;\n  }\n  /**\r\n   * Return the next or previous page index computed by the page number and current index.\r\n   *\r\n   * @param {number}  number - Specify the page number.\r\n   * @param {number}  index  - Current index.\r\n   * @param {boolean} prev   - Prev or next.\r\n   *\r\n   * @return {number} - Slide index.\r\n   */\n\n\n  function parsePage(number, index, prev) {\n    if (number > -1) {\n      return Controller.toIndex(number);\n    }\n\n    var perMove = options.perMove;\n    var sign = prev ? -1 : 1;\n\n    if (perMove) {\n      return index + perMove * sign;\n    }\n\n    return Controller.toIndex(Controller.toPage(index) + sign);\n  }\n\n  return Controller;\n});\n;// CONCATENATED MODULE: ./src/js/components/track/index.js\n/**\r\n * The component for moving list in the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\nvar abs = Math.abs;\n/**\r\n * The component for moving list in the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const track = (function (Splide, Components) {\n  /**\r\n   * Hold the Layout component.\r\n   *\r\n   * @type {Object}\r\n   */\n  var Layout;\n  /**\r\n   * Hold the Layout component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements;\n  /**\r\n   * Store the list element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var list;\n  /**\r\n   * Whether the current direction is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isVertical = Splide.options.direction === TTB;\n  /**\r\n   * Whether the slider type is FADE or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isFade = Splide.is(FADE);\n  /**\r\n   * Whether the slider direction is RTL or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isRTL = Splide.options.direction === RTL;\n  /**\r\n   * This will be true while transitioning from the last index to the first one.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isLoopPending = false;\n  /**\r\n   * Sign for the direction. Only RTL mode uses the positive sign.\r\n   *\r\n   * @type {number}\r\n   */\n\n  var sign = isRTL ? 1 : -1;\n  /**\r\n   * Track component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Track = {\n    /**\r\n     * Make public the sign defined locally.\r\n     *\r\n     * @type {number}\r\n     */\n    sign: sign,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Elements = Components.Elements;\n      Layout = Components.Layout;\n      list = Elements.list;\n    },\n\n    /**\r\n     * Called after the component is mounted.\r\n     * The resize event must be registered after the Layout's one is done.\r\n     */\n    mounted: function mounted() {\n      var _this = this;\n\n      if (!isFade) {\n        this.jump(0);\n        Splide.on('mounted resize updated', function () {\n          _this.jump(Splide.index);\n        });\n      }\n    },\n\n    /**\r\n     * Go to the given destination index.\r\n     * After arriving there, the track is jump to the new index without animation, mainly for loop mode.\r\n     *\r\n     * @param {number}  destIndex - A destination index.\r\n     *                              This can be negative or greater than slides length for reaching clones.\r\n     * @param {number}  newIndex  - An actual new index. They are always same in Slide and Rewind mode.\r\n     * @param {boolean} silently  - If true, suppress emitting events.\r\n     */\n    go: function go(destIndex, newIndex, silently) {\n      var newPosition = getTrimmedPosition(destIndex);\n      var prevIndex = Splide.index; // Prevent any actions while transitioning from the last index to the first one for jump.\n\n      if (Splide.State.is(MOVING) && isLoopPending) {\n        return;\n      }\n\n      isLoopPending = destIndex !== newIndex;\n\n      if (!silently) {\n        Splide.emit('move', newIndex, prevIndex, destIndex);\n      }\n\n      if (Math.abs(newPosition - this.position) >= 1 || isFade) {\n        Components.Transition.start(destIndex, newIndex, prevIndex, this.toCoord(newPosition), function () {\n          onTransitionEnd(destIndex, newIndex, prevIndex, silently);\n        });\n      } else {\n        if (destIndex !== prevIndex && Splide.options.trimSpace === 'move') {\n          Components.Controller.go(destIndex + destIndex - prevIndex, silently);\n        } else {\n          onTransitionEnd(destIndex, newIndex, prevIndex, silently);\n        }\n      }\n    },\n\n    /**\r\n     * Move the track to the specified index.\r\n     *\r\n     * @param {number} index - A destination index where the track jumps.\r\n     */\n    jump: function jump(index) {\n      this.translate(getTrimmedPosition(index));\n    },\n\n    /**\r\n     * Set the list position by CSS translate property.\r\n     *\r\n     * @param {number} position - A new position value.\r\n     */\n    translate: function translate(position) {\n      applyStyle(list, {\n        transform: \"translate\" + (isVertical ? 'Y' : 'X') + \"(\" + position + \"px)\"\n      });\n    },\n\n    /**\r\n     * Cancel the transition and set the list position.\r\n     * Also, loop the slider if necessary.\r\n     */\n    cancel: function cancel() {\n      if (Splide.is(LOOP)) {\n        this.shift();\n      } else {\n        // Ensure the current position.\n        this.translate(this.position);\n      }\n\n      applyStyle(list, {\n        transition: ''\n      });\n    },\n\n    /**\r\n     * Shift the slider if it exceeds borders on the edge.\r\n     */\n    shift: function shift() {\n      var position = abs(this.position);\n      var left = abs(this.toPosition(0));\n      var right = abs(this.toPosition(Splide.length));\n      var innerSize = right - left;\n\n      if (position < left) {\n        position += innerSize;\n      } else if (position > right) {\n        position -= innerSize;\n      }\n\n      this.translate(sign * position);\n    },\n\n    /**\r\n     * Trim redundant spaces on the left or right edge if necessary.\r\n     *\r\n     * @param {number} position - Position value to be trimmed.\r\n     *\r\n     * @return {number} - Trimmed position.\r\n     */\n    trim: function trim(position) {\n      if (!Splide.options.trimSpace || Splide.is(LOOP)) {\n        return position;\n      }\n\n      var edge = sign * (Layout.totalSize() - Layout.size - Layout.gap);\n      return between(position, edge, 0);\n    },\n\n    /**\r\n     * Calculate the closest slide index from the given position.\r\n     *\r\n     * @param {number} position - A position converted to an slide index.\r\n     *\r\n     * @return {number} - The closest slide index.\r\n     */\n    toIndex: function toIndex(position) {\n      var _this2 = this;\n\n      var index = 0;\n      var minDistance = Infinity;\n      Elements.getSlides(true).forEach(function (Slide) {\n        var slideIndex = Slide.index;\n        var distance = abs(_this2.toPosition(slideIndex) - position);\n\n        if (distance < minDistance) {\n          minDistance = distance;\n          index = slideIndex;\n        }\n      });\n      return index;\n    },\n\n    /**\r\n     * Return coordinates object by the given position.\r\n     *\r\n     * @param {number} position - A position value.\r\n     *\r\n     * @return {Object} - A coordinates object.\r\n     */\n    toCoord: function toCoord(position) {\n      return {\n        x: isVertical ? 0 : position,\n        y: isVertical ? position : 0\n      };\n    },\n\n    /**\r\n     * Calculate the track position by a slide index.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {Object} - Calculated position.\r\n     */\n    toPosition: function toPosition(index) {\n      var position = Layout.totalSize(index) - Layout.slideSize(index) - Layout.gap;\n      return sign * (position + this.offset(index));\n    },\n\n    /**\r\n     * Return the current offset value, considering direction.\r\n     *\r\n     * @return {number} - Offset amount.\r\n     */\n    offset: function offset(index) {\n      var focus = Splide.options.focus;\n      var slideSize = Layout.slideSize(index);\n\n      if (focus === 'center') {\n        return -(Layout.size - slideSize) / 2;\n      }\n\n      return -(parseInt(focus) || 0) * (slideSize + Layout.gap);\n    },\n\n    /**\r\n     * Return the current position.\r\n     * This returns the correct position even while transitioning by CSS.\r\n     *\r\n     * @return {number} - Current position.\r\n     */\n    get position() {\n      var prop = isVertical ? 'top' : isRTL ? 'right' : 'left';\n      return getRect(list)[prop] - (getRect(Elements.track)[prop] - Layout.padding[prop] * sign);\n    }\n\n  };\n  /**\r\n   * Called whenever slides arrive at a destination.\r\n   *\r\n   * @param {number}  destIndex - A destination index.\r\n   * @param {number}  newIndex  - A new index.\r\n   * @param {number}  prevIndex - A previous index.\r\n   * @param {boolean} silently  - If true, suppress emitting events.\r\n   */\n\n  function onTransitionEnd(destIndex, newIndex, prevIndex, silently) {\n    applyStyle(list, {\n      transition: ''\n    });\n    isLoopPending = false;\n\n    if (!isFade) {\n      Track.jump(newIndex);\n    }\n\n    if (!silently) {\n      Splide.emit('moved', newIndex, prevIndex, destIndex);\n    }\n  }\n  /**\r\n   * Convert index to the trimmed position.\r\n   *\r\n   * @return {number} - Trimmed position.\r\n   */\n\n\n  function getTrimmedPosition(index) {\n    return Track.trim(Track.toPosition(index));\n  }\n\n  return Track;\n});\n;// CONCATENATED MODULE: ./src/js/components/clones/index.js\n/**\r\n * The component for cloning some slides for \"loop\" mode of the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n/**\r\n * The component for cloning some slides for \"loop\" mode of the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const clones = (function (Splide, Components) {\n  /**\r\n   * Store information of all clones.\r\n   *\r\n   * @type {Array}\r\n   */\n  var clones = [];\n  /**\r\n   * Store the current clone count on one side.\r\n   *\r\n   * @type {number}\r\n   */\n\n  var cloneCount = 0;\n  /**\r\n   * Keep Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Clones component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Clones = {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      if (Splide.is(LOOP)) {\n        init();\n        Splide.on('refresh:before', function () {\n          _this.destroy();\n        }).on('refresh', init).on('resize', function () {\n          if (cloneCount !== getCloneCount()) {\n            // Destroy before refresh not to collect clones by the Elements component.\n            _this.destroy();\n\n            Splide.refresh();\n          }\n        });\n      }\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      dom_remove(clones);\n      clones = [];\n    },\n\n    /**\r\n     * Return all clones.\r\n     *\r\n     * @return {Element[]} - Cloned elements.\r\n     */\n    get clones() {\n      return clones;\n    },\n\n    /**\r\n     * Return clone length.\r\n     *\r\n     * @return {number} - A length of clones.\r\n     */\n    get length() {\n      return clones.length;\n    }\n\n  };\n  /**\r\n   * Initialization.\r\n   */\n\n  function init() {\n    Clones.destroy();\n    cloneCount = getCloneCount();\n    generateClones(cloneCount);\n  }\n  /**\r\n   * Generate and append/prepend clones.\r\n   *\r\n   * @param {number} count - The half number of clones.\r\n   */\n\n\n  function generateClones(count) {\n    var length = Elements.length,\n        register = Elements.register;\n\n    if (length) {\n      var slides = Elements.slides;\n\n      while (slides.length < count) {\n        slides = slides.concat(slides);\n      } // Clones after the last element.\n\n\n      slides.slice(0, count).forEach(function (elm, index) {\n        var clone = cloneDeeply(elm);\n        append(Elements.list, clone);\n        clones.push(clone);\n        register(clone, index + length, index % length);\n      }); // Clones before the first element.\n\n      slides.slice(-count).forEach(function (elm, index) {\n        var clone = cloneDeeply(elm);\n        before(clone, slides[0]);\n        clones.push(clone);\n        register(clone, index - count, (length + index - count % length) % length);\n      });\n    }\n  }\n  /**\r\n   * Return half count of clones to be generated.\r\n   * Clone count is determined by:\r\n   * - \"clones\" value in the options.\r\n   * - Number of slides that can be placed in a view in \"fixed\" mode.\r\n   * - Max pages a flick action can move.\r\n   * - Whether the slide length is enough for perPage.\r\n   *\r\n   * @return {number} - Count for clones.\r\n   */\n\n\n  function getCloneCount() {\n    var options = Splide.options;\n\n    if (options.clones) {\n      return options.clones;\n    } // Use the slide length in autoWidth mode because the number cannot be calculated.\n\n\n    var baseCount = options.autoWidth || options.autoHeight ? Elements.length : options.perPage;\n    var dimension = options.direction === TTB ? 'Height' : 'Width';\n    var fixedSize = toPixel(Splide.root, options[\"fixed\" + dimension]);\n\n    if (fixedSize) {\n      // Roughly calculate the count. This needs not to be strict.\n      baseCount = Math.ceil(Elements.track[\"client\" + dimension] / fixedSize);\n    }\n\n    return baseCount * (options.drag ? options.flickMaxPages + 1 : 1);\n  }\n  /**\r\n   * Clone deeply the given element.\r\n   *\r\n   * @param {Element} elm - An element being duplicated.\r\n   *\r\n   * @return {Node} - A cloned node(element).\r\n   */\n\n\n  function cloneDeeply(elm) {\n    var clone = elm.cloneNode(true);\n    addClass(clone, Splide.classes.clone); // ID should not be duplicated.\n\n    removeAttribute(clone, 'id');\n    return clone;\n  }\n\n  return Clones;\n});\n;// CONCATENATED MODULE: ./src/js/components/layout/directions/horizontal.js\n/**\r\n * The resolver component for horizontal layout.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The resolver component for horizontal layout.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The resolver object.\r\n */\n\n/* harmony default export */ const horizontal = (function (Splide, Components) {\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n  var Elements = Components.Elements;\n  /**\r\n   * Keep the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var root = Splide.root;\n  /**\r\n   * Keep the track element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var track;\n  /**\r\n   * Keep the latest options.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var options = Splide.options;\n  return {\n    /**\r\n     * Margin property name.\r\n     *\r\n     * @type {string}\r\n     */\n    margin: 'margin' + (options.direction === RTL ? 'Left' : 'Right'),\n\n    /**\r\n     * Always 0 because the height will be determined by inner contents.\r\n     *\r\n     * @type {number}\r\n     */\n    height: 0,\n\n    /**\r\n     * Initialization.\r\n     */\n    init: function init() {\n      this.resize();\n    },\n\n    /**\r\n     * Resize gap and padding.\r\n     * This must be called on init.\r\n     */\n    resize: function resize() {\n      options = Splide.options;\n      track = Elements.track;\n      this.gap = toPixel(root, options.gap);\n      var padding = options.padding;\n      var left = toPixel(root, padding.left || padding);\n      var right = toPixel(root, padding.right || padding);\n      this.padding = {\n        left: left,\n        right: right\n      };\n      applyStyle(track, {\n        paddingLeft: unit(left),\n        paddingRight: unit(right)\n      });\n    },\n\n    /**\r\n     * Return total width from the left of the list to the right of the slide specified by the provided index.\r\n     *\r\n     * @param {number} index - Optional. A slide index. If undefined, total width of the slider will be returned.\r\n     *\r\n     * @return {number} - Total width to the right side of the specified slide, or 0 for an invalid index.\r\n     */\n    totalWidth: function totalWidth(index) {\n      if (index === void 0) {\n        index = Splide.length - 1;\n      }\n\n      var Slide = Elements.getSlide(index);\n      var width = 0;\n\n      if (Slide) {\n        var slideRect = getRect(Slide.slide);\n        var listRect = getRect(Elements.list);\n\n        if (options.direction === RTL) {\n          width = listRect.right - slideRect.left;\n        } else {\n          width = slideRect.right - listRect.left;\n        }\n\n        width += this.gap;\n      }\n\n      return width;\n    },\n\n    /**\r\n     * Return the slide width in px.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - The slide width.\r\n     */\n    slideWidth: function slideWidth(index) {\n      if (options.autoWidth) {\n        var Slide = Elements.getSlide(index);\n        return Slide ? Slide.slide.offsetWidth : 0;\n      }\n\n      var width = options.fixedWidth || (this.width + this.gap) / options.perPage - this.gap;\n      return toPixel(root, width);\n    },\n\n    /**\r\n     * Return the slide height in px.\r\n     *\r\n     * @return {number} - The slide height.\r\n     */\n    slideHeight: function slideHeight() {\n      var height = options.height || options.fixedHeight || this.width * options.heightRatio;\n      return toPixel(root, height);\n    },\n\n    /**\r\n     * Return slider width without padding.\r\n     *\r\n     * @return {number} - Current slider width.\r\n     */\n    get width() {\n      return track.clientWidth - this.padding.left - this.padding.right;\n    }\n\n  };\n});\n;// CONCATENATED MODULE: ./src/js/components/layout/directions/vertical.js\n/**\r\n * The resolver component for vertical layout.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The resolver component for vertical layout.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The resolver object.\r\n */\n\n/* harmony default export */ const vertical = (function (Splide, Components) {\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n  var Elements = Components.Elements;\n  /**\r\n   * Keep the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var root = Splide.root;\n  /**\r\n   * Keep the track element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var track;\n  /**\r\n   * Keep the latest options.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var options;\n  return {\n    /**\r\n     * Margin property name.\r\n     *\r\n     * @type {string}\r\n     */\n    margin: 'marginBottom',\n\n    /**\r\n     * Initialization.\r\n     */\n    init: function init() {\n      this.resize();\n    },\n\n    /**\r\n     * Resize gap and padding.\r\n     * This must be called on init.\r\n     */\n    resize: function resize() {\n      options = Splide.options;\n      track = Elements.track;\n      this.gap = toPixel(root, options.gap);\n      var padding = options.padding;\n      var top = toPixel(root, padding.top || padding);\n      var bottom = toPixel(root, padding.bottom || padding);\n      this.padding = {\n        top: top,\n        bottom: bottom\n      };\n      applyStyle(track, {\n        paddingTop: unit(top),\n        paddingBottom: unit(bottom)\n      });\n    },\n\n    /**\r\n     * Return total height from the top of the list to the bottom of the slide specified by the provided index.\r\n     *\r\n     * @param {number} index - Optional. A slide index. If undefined, total height of the slider will be returned.\r\n     *\r\n     * @return {number} - Total height to the bottom of the specified slide, or 0 for an invalid index.\r\n     */\n    totalHeight: function totalHeight(index) {\n      if (index === void 0) {\n        index = Splide.length - 1;\n      }\n\n      var Slide = Elements.getSlide(index);\n\n      if (Slide) {\n        return getRect(Slide.slide).bottom - getRect(Elements.list).top + this.gap;\n      }\n\n      return 0;\n    },\n\n    /**\r\n     * Return the slide width in px.\r\n     *\r\n     * @return {number} - The slide width.\r\n     */\n    slideWidth: function slideWidth() {\n      return toPixel(root, options.fixedWidth || this.width);\n    },\n\n    /**\r\n     * Return the slide height in px.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - The slide height.\r\n     */\n    slideHeight: function slideHeight(index) {\n      if (options.autoHeight) {\n        var Slide = Elements.getSlide(index);\n        return Slide ? Slide.slide.offsetHeight : 0;\n      }\n\n      var height = options.fixedHeight || (this.height + this.gap) / options.perPage - this.gap;\n      return toPixel(root, height);\n    },\n\n    /**\r\n     * Return slider width without padding.\r\n     *\r\n     * @return {number} - Current slider width.\r\n     */\n    get width() {\n      return track.clientWidth;\n    },\n\n    /**\r\n     * Return slide height without padding.\r\n     *\r\n     * @return {number} - Slider height.\r\n     */\n    get height() {\n      var height = options.height || this.width * options.heightRatio;\n      exist(height, '\"height\" or \"heightRatio\" is missing.');\n      return toPixel(root, height) - this.padding.top - this.padding.bottom;\n    }\n\n  };\n});\n;// CONCATENATED MODULE: ./src/js/utils/time.js\n/**\r\n * A package of utility functions related with time.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Simple throttle function that controls how often the given function is executed.\r\n *\r\n * @param {function} func - A function to be throttled.\r\n * @param {number}   wait - Time in millisecond for interval of execution.\r\n *\r\n * @return {Function} - A debounced function.\r\n */\nfunction throttle(func, wait) {\n  var timeout; // Declare function by the \"function\" keyword to prevent \"this\" from being inherited.\n\n  return function () {\n    if (!timeout) {\n      timeout = setTimeout(function () {\n        func();\n        timeout = null;\n      }, wait);\n    }\n  };\n}\n/**\r\n * Custom setInterval function that provides progress rate as callback.\r\n *\r\n * @param {function} callback - A callback function fired every time the interval time passes.\r\n * @param {number}   interval - Interval duration in milliseconds.\r\n * @param {function} progress - A callback function fired whenever the progress goes.\r\n *\r\n * @return {Object} - An object containing play() and pause() functions.\r\n */\n\nfunction createInterval(callback, interval, progress) {\n  var _window = window,\n      requestAnimationFrame = _window.requestAnimationFrame;\n  var start,\n      elapse,\n      rate,\n      _pause = true;\n\n  var step = function step(timestamp) {\n    if (!_pause) {\n      if (!start) {\n        start = timestamp;\n\n        if (rate && rate < 1) {\n          start -= rate * interval;\n        }\n      }\n\n      elapse = timestamp - start;\n      rate = elapse / interval;\n\n      if (elapse >= interval) {\n        start = 0;\n        rate = 1;\n        callback();\n      }\n\n      if (progress) {\n        progress(rate);\n      }\n\n      requestAnimationFrame(step);\n    }\n  };\n\n  return {\n    pause: function pause() {\n      _pause = true;\n      start = 0;\n    },\n    play: function play(reset) {\n      start = 0;\n\n      if (reset) {\n        rate = 0;\n      }\n\n      if (_pause) {\n        _pause = false;\n        requestAnimationFrame(step);\n      }\n    }\n  };\n}\n;// CONCATENATED MODULE: ./src/js/components/layout/index.js\n/**\r\n * The component for handing slide layouts and their sizes.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n\n/**\r\n * The component for handing slide layouts and their sizes.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const layout = (function (Splide, Components) {\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n  var Elements = Components.Elements;\n  /**\r\n   * Whether the slider is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isVertical = Splide.options.direction === TTB;\n  /**\r\n   * Layout component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Layout = object_assign({\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      bind();\n      init(); // The word \"size\" means width for a horizontal slider and height for a vertical slider.\n\n      this.totalSize = isVertical ? this.totalHeight : this.totalWidth;\n      this.slideSize = isVertical ? this.slideHeight : this.slideWidth;\n    },\n\n    /**\r\n     * Destroy the component.\r\n     */\n    destroy: function destroy() {\n      removeAttribute([Elements.list, Elements.track], 'style');\n    },\n\n    /**\r\n     * Return the slider height on the vertical mode or width on the horizontal mode.\r\n     *\r\n     * @return {number}\r\n     */\n    get size() {\n      return isVertical ? this.height : this.width;\n    }\n\n  }, isVertical ? vertical(Splide, Components) : horizontal(Splide, Components));\n  /**\r\n   * Init slider styles according to options.\r\n   */\n\n  function init() {\n    Layout.init();\n    applyStyle(Splide.root, {\n      maxWidth: unit(Splide.options.width)\n    });\n    Elements.each(function (Slide) {\n      Slide.slide.style[Layout.margin] = unit(Layout.gap);\n    });\n    resize();\n  }\n  /**\r\n   * Listen the resize native event with throttle.\r\n   * Initialize when the component is mounted or options are updated.\r\n   */\n\n\n  function bind() {\n    Splide.on('resize load', throttle(function () {\n      Splide.emit('resize');\n    }, Splide.options.throttle), window).on('resize', resize).on('updated refresh', init);\n  }\n  /**\r\n   * Resize the track and slide elements.\r\n   */\n\n\n  function resize() {\n    var options = Splide.options;\n    Layout.resize();\n    applyStyle(Elements.track, {\n      height: unit(Layout.height)\n    });\n    var slideHeight = options.autoHeight ? null : unit(Layout.slideHeight());\n    Elements.each(function (Slide) {\n      applyStyle(Slide.container, {\n        height: slideHeight\n      });\n      applyStyle(Slide.slide, {\n        width: options.autoWidth ? null : unit(Layout.slideWidth(Slide.index)),\n        height: Slide.container ? null : slideHeight\n      });\n    });\n    Splide.emit('resized');\n  }\n\n  return Layout;\n});\n;// CONCATENATED MODULE: ./src/js/components/drag/index.js\n/**\r\n * The component for supporting mouse drag and swipe.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\nvar drag_abs = Math.abs;\n/**\r\n * If the absolute velocity is greater thant this value,\r\n * a slider always goes to a different slide after drag, not allowed to stay on a current slide.\r\n */\n\nvar MIN_VELOCITY = 0.1;\n/**\r\n * Adjust how much the track can be pulled on the first or last page.\r\n * The larger number this is, the farther the track moves.\r\n * This should be around 5 - 9.\r\n *\r\n * @type {number}\r\n */\n\nvar FRICTION_REDUCER = 7;\n/**\r\n * The component supporting mouse drag and swipe.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const drag = (function (Splide, Components) {\n  /**\r\n   * Store the Move component.\r\n   *\r\n   * @type {Object}\r\n   */\n  var Track = Components.Track;\n  /**\r\n   * Store the Controller component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Controller = Components.Controller;\n  /**\r\n   * Coordinate of the track on starting drag.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var startCoord;\n  /**\r\n   * Analyzed info on starting drag.\r\n   *\r\n   * @type {Object|null}\r\n   */\n\n  var startInfo;\n  /**\r\n   * Analyzed info being updated while dragging/swiping.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var currentInfo;\n  /**\r\n   * Determine whether slides are being dragged or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isDragging;\n  /**\r\n   * Whether the slider direction is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isVertical = Splide.options.direction === TTB;\n  /**\r\n   * Axis for the direction.\r\n   *\r\n   * @type {string}\r\n   */\n\n  var axis = isVertical ? 'y' : 'x';\n  /**\r\n   * Drag component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Drag = {\n    /**\r\n     * Whether dragging is disabled or not.\r\n     *\r\n     * @type {boolean}\r\n     */\n    disabled: false,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      var Elements = Components.Elements;\n      var track = Elements.track;\n      Splide.on('touchstart mousedown', start, track).on('touchmove mousemove', move, track, {\n        passive: false\n      }).on('touchend touchcancel mouseleave mouseup dragend', end, track).on('mounted refresh', function () {\n        // Prevent dragging an image or anchor itself.\n        each(Elements.list.querySelectorAll('img, a'), function (elm) {\n          Splide.off('dragstart', elm).on('dragstart', function (e) {\n            e.preventDefault();\n          }, elm, {\n            passive: false\n          });\n        });\n      }).on('mounted updated', function () {\n        _this.disabled = !Splide.options.drag;\n      });\n    }\n  };\n  /**\r\n   * Called when the track starts to be dragged.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\n\n  function start(e) {\n    if (!Drag.disabled && !isDragging) {\n      // These prams are used to evaluate whether the slider should start moving.\n      init(e);\n    }\n  }\n  /**\r\n   * Initialize parameters.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\n\n\n  function init(e) {\n    startCoord = Track.toCoord(Track.position);\n    startInfo = analyze(e, {});\n    currentInfo = startInfo;\n  }\n  /**\r\n   * Called while the track being dragged.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\n\n\n  function move(e) {\n    if (startInfo) {\n      currentInfo = analyze(e, startInfo);\n\n      if (isDragging) {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n\n        if (!Splide.is(FADE)) {\n          var position = startCoord[axis] + currentInfo.offset[axis];\n          Track.translate(resist(position));\n        }\n      } else {\n        if (shouldMove(currentInfo)) {\n          Splide.emit('drag', startInfo);\n          isDragging = true;\n          Track.cancel(); // These params are actual drag data.\n\n          init(e);\n        }\n      }\n    }\n  }\n  /**\r\n   * Determine whether to start moving the track or not by drag angle.\r\n   *\r\n   * @param {Object} info - An information object.\r\n   *\r\n   * @return {boolean} - True if the track should be moved or false if not.\r\n   */\n\n\n  function shouldMove(_ref) {\n    var offset = _ref.offset;\n\n    if (Splide.State.is(MOVING) && Splide.options.waitForTransition) {\n      return false;\n    }\n\n    var angle = Math.atan(drag_abs(offset.y) / drag_abs(offset.x)) * 180 / Math.PI;\n\n    if (isVertical) {\n      angle = 90 - angle;\n    }\n\n    return angle < Splide.options.dragAngleThreshold;\n  }\n  /**\r\n   * Resist dragging the track on the first/last page because there is no more.\r\n   *\r\n   * @param {number} position - A position being applied to the track.\r\n   *\r\n   * @return {Object} - Adjusted position.\r\n   */\n\n\n  function resist(position) {\n    if (Splide.is(SLIDE)) {\n      var sign = Track.sign;\n\n      var _start = sign * Track.trim(Track.toPosition(0));\n\n      var _end = sign * Track.trim(Track.toPosition(Controller.edgeIndex));\n\n      position *= sign;\n\n      if (position < _start) {\n        position = _start - FRICTION_REDUCER * Math.log(_start - position);\n      } else if (position > _end) {\n        position = _end + FRICTION_REDUCER * Math.log(position - _end);\n      }\n\n      position *= sign;\n    }\n\n    return position;\n  }\n  /**\r\n   * Called when dragging ends.\r\n   */\n\n\n  function end() {\n    startInfo = null;\n\n    if (isDragging) {\n      Splide.emit('dragged', currentInfo);\n      go(currentInfo);\n      isDragging = false;\n    }\n  }\n  /**\r\n   * Go to the slide determined by the analyzed data.\r\n   *\r\n   * @param {Object} info - An info object.\r\n   */\n\n\n  function go(info) {\n    var velocity = info.velocity[axis];\n    var absV = drag_abs(velocity);\n\n    if (absV > 0) {\n      var options = Splide.options;\n      var index = Splide.index;\n      var sign = velocity < 0 ? -1 : 1;\n      var destIndex = index;\n\n      if (!Splide.is(FADE)) {\n        var destination = Track.position;\n\n        if (absV > options.flickVelocityThreshold && drag_abs(info.offset[axis]) < options.swipeDistanceThreshold) {\n          destination += sign * Math.min(absV * options.flickPower, Components.Layout.size * (options.flickMaxPages || 1));\n        }\n\n        destIndex = Track.toIndex(destination);\n      }\n      /*\r\n       * Do not allow the track to go to a previous position if there is enough velocity.\r\n       * Always use the adjacent index for the fade mode.\r\n       */\n\n\n      if (destIndex === index && absV > MIN_VELOCITY) {\n        destIndex = index + sign * Track.sign;\n      }\n\n      if (Splide.is(SLIDE)) {\n        destIndex = between(destIndex, 0, Controller.edgeIndex);\n      }\n\n      Controller.go(destIndex, options.isNavigation);\n    }\n  }\n  /**\r\n   * Analyze the given event object and return important information for handling swipe behavior.\r\n   *\r\n   * @param {Event}   e          - Touch or Mouse event object.\r\n   * @param {Object}  startInfo  - Information analyzed on start for calculating difference from the current one.\r\n   *\r\n   * @return {Object} - An object containing analyzed information, such as offset, velocity, etc.\r\n   */\n\n\n  function analyze(e, startInfo) {\n    var timeStamp = e.timeStamp,\n        touches = e.touches;\n\n    var _ref2 = touches ? touches[0] : e,\n        clientX = _ref2.clientX,\n        clientY = _ref2.clientY;\n\n    var _ref3 = startInfo.to || {},\n        _ref3$x = _ref3.x,\n        fromX = _ref3$x === void 0 ? clientX : _ref3$x,\n        _ref3$y = _ref3.y,\n        fromY = _ref3$y === void 0 ? clientY : _ref3$y;\n\n    var startTime = startInfo.time || 0;\n    var offset = {\n      x: clientX - fromX,\n      y: clientY - fromY\n    };\n    var duration = timeStamp - startTime;\n    var velocity = {\n      x: offset.x / duration,\n      y: offset.y / duration\n    };\n    return {\n      to: {\n        x: clientX,\n        y: clientY\n      },\n      offset: offset,\n      time: timeStamp,\n      velocity: velocity\n    };\n  }\n\n  return Drag;\n});\n;// CONCATENATED MODULE: ./src/js/components/click/index.js\n/**\r\n * The component for handling a click event.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The component for handling a click event.\r\n * Click should be disabled during drag/swipe.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n/* harmony default export */ const click = (function (Splide, Components) {\n  /**\r\n   * Whether click is disabled or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  var disabled = false;\n  /**\r\n   * Click component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Click = {\n    /**\r\n     * Mount only when the drag is activated and the slide type is not \"fade\".\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.drag,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('click', onClick, Components.Elements.track, {\n        capture: true\n      }).on('drag', function () {\n        disabled = true;\n      }).on('dragged', function () {\n        // Make sure the flag is released after the click event is fired.\n        setTimeout(function () {\n          disabled = false;\n        });\n      });\n    }\n  };\n  /**\r\n   * Called when a track element is clicked.\r\n   *\r\n   * @param {Event} e - A click event.\r\n   */\n\n  function onClick(e) {\n    if (disabled) {\n      e.preventDefault();\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  return Click;\n});\n;// CONCATENATED MODULE: ./src/js/components/autoplay/index.js\n/**\r\n * The component for playing slides automatically.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Set of pause flags.\r\n */\n\nvar PAUSE_FLAGS = {\n  HOVER: 1,\n  FOCUS: 2,\n  MANUAL: 3\n};\n/**\r\n * The component for playing slides automatically.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const autoplay = (function (Splide, Components, name) {\n  /**\r\n   * Store pause flags.\r\n   *\r\n   * @type {Array}\r\n   */\n  var flags = [];\n  /**\r\n   * Store an interval object.\r\n   *\r\n   * @type {Object};\r\n   */\n\n  var interval;\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Autoplay component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Autoplay = {\n    /**\r\n     * Required only when the autoplay option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.autoplay,\n\n    /**\r\n     * Called when the component is mounted.\r\n     * Note that autoplay starts only if there are slides over perPage number.\r\n     */\n    mount: function mount() {\n      var options = Splide.options;\n\n      if (Elements.slides.length > options.perPage) {\n        interval = createInterval(function () {\n          Splide.go('>');\n        }, options.interval, function (rate) {\n          Splide.emit(name + \":playing\", rate);\n\n          if (Elements.bar) {\n            applyStyle(Elements.bar, {\n              width: rate * 100 + \"%\"\n            });\n          }\n        });\n        bind();\n        this.play();\n      }\n    },\n\n    /**\r\n     * Start autoplay.\r\n     *\r\n     * @param {number} flag - A pause flag to be removed.\r\n     */\n    play: function play(flag) {\n      if (flag === void 0) {\n        flag = 0;\n      }\n\n      flags = flags.filter(function (f) {\n        return f !== flag;\n      });\n\n      if (!flags.length) {\n        Splide.emit(name + \":play\");\n        interval.play(Splide.options.resetProgress);\n      }\n    },\n\n    /**\r\n     * Pause autoplay.\r\n     * Note that Array.includes is not supported by IE.\r\n     *\r\n     * @param {number} flag - A pause flag to be added.\r\n     */\n    pause: function pause(flag) {\n      if (flag === void 0) {\n        flag = 0;\n      }\n\n      interval.pause();\n\n      if (flags.indexOf(flag) === -1) {\n        flags.push(flag);\n      }\n\n      if (flags.length === 1) {\n        Splide.emit(name + \":pause\");\n      }\n    }\n  };\n  /**\r\n   * Listen some events.\r\n   */\n\n  function bind() {\n    var options = Splide.options;\n    var sibling = Splide.sibling;\n    var elms = [Splide.root, sibling ? sibling.root : null];\n\n    if (options.pauseOnHover) {\n      switchOn(elms, 'mouseleave', PAUSE_FLAGS.HOVER, true);\n      switchOn(elms, 'mouseenter', PAUSE_FLAGS.HOVER, false);\n    }\n\n    if (options.pauseOnFocus) {\n      switchOn(elms, 'focusout', PAUSE_FLAGS.FOCUS, true);\n      switchOn(elms, 'focusin', PAUSE_FLAGS.FOCUS, false);\n    }\n\n    if (Elements.play) {\n      Splide.on('click', function () {\n        // Need to be removed a focus flag at first.\n        Autoplay.play(PAUSE_FLAGS.FOCUS);\n        Autoplay.play(PAUSE_FLAGS.MANUAL);\n      }, Elements.play);\n    }\n\n    if (Elements.pause) {\n      switchOn([Elements.pause], 'click', PAUSE_FLAGS.MANUAL, false);\n    }\n\n    Splide.on('move refresh', function () {\n      Autoplay.play();\n    }) // Rewind the timer.\n    .on('destroy', function () {\n      Autoplay.pause();\n    });\n  }\n  /**\r\n   * Play or pause on the given event.\r\n   *\r\n   * @param {Element[]} elms  - Elements.\r\n   * @param {string}    event - An event name or names.\r\n   * @param {number}    flag  - A pause flag defined on the top.\r\n   * @param {boolean}   play  - Determine whether to play or pause.\r\n   */\n\n\n  function switchOn(elms, event, flag, play) {\n    elms.forEach(function (elm) {\n      Splide.on(event, function () {\n        Autoplay[play ? 'play' : 'pause'](flag);\n      }, elm);\n    });\n  }\n\n  return Autoplay;\n});\n;// CONCATENATED MODULE: ./src/js/components/cover/index.js\n/**\r\n * The component for change an img element to background image of its wrapper.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The component for change an img element to background image of its wrapper.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const cover = (function (Splide, Components) {\n  /**\r\n   * Hold options.\r\n   *\r\n   * @type {Object}\r\n   */\n  var options = Splide.options;\n  /**\r\n   * Cover component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Cover = {\n    /**\r\n     * Required only when \"cover\" option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: options.cover,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('lazyload:loaded', function (img) {\n        cover(img, false);\n      });\n      Splide.on('mounted updated refresh', function () {\n        return apply(false);\n      });\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      apply(true);\n    }\n  };\n  /**\r\n   * Apply \"cover\" to all slides.\r\n   *\r\n   * @param {boolean} uncover - If true, \"cover\" will be clear.\r\n   */\n\n  function apply(uncover) {\n    Components.Elements.each(function (Slide) {\n      var img = child(Slide.slide, 'IMG') || child(Slide.container, 'IMG');\n\n      if (img && img.src) {\n        cover(img, uncover);\n      }\n    });\n  }\n  /**\r\n   * Set background image of the parent element, using source of the given image element.\r\n   *\r\n   * @param {Element} img     - An image element.\r\n   * @param {boolean} uncover - Reset \"cover\".\r\n   */\n\n\n  function cover(img, uncover) {\n    applyStyle(img.parentElement, {\n      background: uncover ? '' : \"center/cover no-repeat url(\\\"\" + img.src + \"\\\")\"\n    });\n    applyStyle(img, {\n      display: uncover ? '' : 'none'\n    });\n  }\n\n  return Cover;\n});\n;// CONCATENATED MODULE: ./src/js/components/arrows/path.js\n/**\r\n * Export vector path for an arrow.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Namespace definition for SVG element.\r\n *\r\n * @type {string}\r\n */\nvar XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\n/**\r\n * The arrow vector path.\r\n *\r\n * @type {number}\r\n */\n\nvar PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\n/**\r\n * SVG width and height.\r\n *\r\n * @type {number}\r\n */\n\nvar SIZE = 40;\n;// CONCATENATED MODULE: ./src/js/components/arrows/index.js\n/**\r\n * The component for appending prev/next arrows.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The component for appending prev/next arrows.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const arrows = (function (Splide, Components, name) {\n  /**\r\n   * Previous arrow element.\r\n   *\r\n   * @type {Element|undefined}\r\n   */\n  var prev;\n  /**\r\n   * Next arrow element.\r\n   *\r\n   * @type {Element|undefined}\r\n   */\n\n  var next;\n  /**\r\n   * Store the class list.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var classes = Splide.classes;\n  /**\r\n   * Hold the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var root = Splide.root;\n  /**\r\n   * Whether arrows are created programmatically or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var created;\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Arrows component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Arrows = {\n    /**\r\n     * Required when the arrows option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.arrows,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      // Attempt to get arrows from HTML source.\n      prev = Elements.arrows.prev;\n      next = Elements.arrows.next; // If arrows were not found in HTML, let's generate them.\n\n      if ((!prev || !next) && Splide.options.arrows) {\n        prev = createArrow(true);\n        next = createArrow(false);\n        created = true;\n        appendArrows();\n      }\n\n      if (prev && next) {\n        bind();\n      }\n\n      this.arrows = {\n        prev: prev,\n        next: next\n      };\n    },\n\n    /**\r\n     * Called after all components are mounted.\r\n     */\n    mounted: function mounted() {\n      Splide.emit(name + \":mounted\", prev, next);\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      removeAttribute([prev, next], 'disabled');\n\n      if (created) {\n        dom_remove(prev.parentElement);\n      }\n    }\n  };\n  /**\r\n   * Listen to native and custom events.\r\n   */\n\n  function bind() {\n    Splide.on('click', function () {\n      Splide.go('<');\n    }, prev).on('click', function () {\n      Splide.go('>');\n    }, next).on('mounted move updated refresh', updateDisabled);\n  }\n  /**\r\n   * Update a disabled attribute.\r\n   */\n\n\n  function updateDisabled() {\n    var _Components$Controlle = Components.Controller,\n        prevIndex = _Components$Controlle.prevIndex,\n        nextIndex = _Components$Controlle.nextIndex;\n    var isEnough = Splide.length > Splide.options.perPage || Splide.is(LOOP);\n    prev.disabled = prevIndex < 0 || !isEnough;\n    next.disabled = nextIndex < 0 || !isEnough;\n    Splide.emit(name + \":updated\", prev, next, prevIndex, nextIndex);\n  }\n  /**\r\n   * Create a wrapper element and append arrows.\r\n   */\n\n\n  function appendArrows() {\n    var wrapper = create('div', {\n      \"class\": classes.arrows\n    });\n    append(wrapper, prev);\n    append(wrapper, next);\n    var slider = Elements.slider;\n    var parent = Splide.options.arrows === 'slider' && slider ? slider : root;\n    before(wrapper, parent.firstElementChild);\n  }\n  /**\r\n   * Create an arrow element.\r\n   *\r\n   * @param {boolean} prev - Determine to create a prev arrow or next arrow.\r\n   *\r\n   * @return {Element} - A created arrow element.\r\n   */\n\n\n  function createArrow(prev) {\n    var arrow = \"<button class=\\\"\" + classes.arrow + \" \" + (prev ? classes.prev : classes.next) + \"\\\" type=\\\"button\\\">\" + (\"<svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\"\\tviewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\"\\twidth=\\\"\" + SIZE + \"\\\"\\theight=\\\"\" + SIZE + \"\\\">\") + (\"<path d=\\\"\" + (Splide.options.arrowPath || PATH) + \"\\\" />\");\n    return domify(arrow);\n  }\n\n  return Arrows;\n});\n;// CONCATENATED MODULE: ./src/js/components/pagination/index.js\n/**\r\n * The component for handling pagination\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The event name for updating some attributes of pagination nodes.\r\n *\r\n * @type {string}\r\n */\n\nvar ATTRIBUTES_UPDATE_EVENT = 'move.page';\n/**\r\n * The event name for recreating pagination.\r\n *\r\n * @type {string}\r\n */\n\nvar UPDATE_EVENT = 'updated.page refresh.page';\n/**\r\n * The component for handling pagination\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const pagination = (function (Splide, Components, name) {\n  /**\r\n   * Store all data for pagination.\r\n   * - list: A list element.\r\n   * - items: An array that contains objects(li, button, index, page).\r\n   *\r\n   * @type {Object}\r\n   */\n  var data = {};\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Pagination component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Pagination = {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var pagination = Splide.options.pagination;\n\n      if (pagination) {\n        data = createPagination();\n        var slider = Elements.slider;\n        var parent = pagination === 'slider' && slider ? slider : Splide.root;\n        append(parent, data.list);\n        Splide.on(ATTRIBUTES_UPDATE_EVENT, updateAttributes);\n      }\n\n      Splide.off(UPDATE_EVENT).on(UPDATE_EVENT, function () {\n        Pagination.destroy();\n\n        if (Splide.options.pagination) {\n          Pagination.mount();\n          Pagination.mounted();\n        }\n      });\n    },\n\n    /**\r\n     * Called after all components are mounted.\r\n     */\n    mounted: function mounted() {\n      if (Splide.options.pagination) {\n        var index = Splide.index;\n        Splide.emit(name + \":mounted\", data, this.getItem(index));\n        updateAttributes(index, -1);\n      }\n    },\n\n    /**\r\n     * Destroy the pagination.\r\n     * Be aware that node.remove() is not supported by IE.\r\n     */\n    destroy: function destroy() {\n      dom_remove(data.list);\n\n      if (data.items) {\n        data.items.forEach(function (item) {\n          Splide.off('click', item.button);\n        });\n      } // Do not remove UPDATE_EVENT to recreate pagination if needed.\n\n\n      Splide.off(ATTRIBUTES_UPDATE_EVENT);\n      data = {};\n    },\n\n    /**\r\n     * Return an item by index.\r\n     *\r\n     * @param {number} index - A slide index.\r\n     *\r\n     * @return {Object|undefined} - An item object on success or undefined on failure.\r\n     */\n    getItem: function getItem(index) {\n      return data.items[Components.Controller.toPage(index)];\n    },\n\n    /**\r\n     * Return object containing pagination data.\r\n     *\r\n     * @return {Object} - Pagination data including list and items.\r\n     */\n    get data() {\n      return data;\n    }\n\n  };\n  /**\r\n   * Update attributes.\r\n   *\r\n   * @param {number} index     - Active index.\r\n   * @param {number} prevIndex - Prev index.\r\n   */\n\n  function updateAttributes(index, prevIndex) {\n    var prev = Pagination.getItem(prevIndex);\n    var curr = Pagination.getItem(index);\n    var active = STATUS_CLASSES.active;\n\n    if (prev) {\n      removeClass(prev.button, active);\n    }\n\n    if (curr) {\n      addClass(curr.button, active);\n    }\n\n    Splide.emit(name + \":updated\", data, prev, curr);\n  }\n  /**\r\n   * Create a wrapper and button elements.\r\n   *\r\n   * @return {Object} - An object contains all data.\r\n   */\n\n\n  function createPagination() {\n    var options = Splide.options;\n    var classes = Splide.classes;\n    var list = create('ul', {\n      \"class\": classes.pagination\n    });\n    var items = Elements.getSlides(false).filter(function (Slide) {\n      return options.focus !== false || Slide.index % options.perPage === 0;\n    }).map(function (Slide, page) {\n      var li = create('li', {});\n      var button = create('button', {\n        \"class\": classes.page,\n        type: 'button'\n      });\n      append(li, button);\n      append(list, li);\n      Splide.on('click', function () {\n        Splide.go(\">\" + page);\n      }, button);\n      return {\n        li: li,\n        button: button,\n        page: page,\n        Slides: Elements.getSlidesByPage(page)\n      };\n    });\n    return {\n      list: list,\n      items: items\n    };\n  }\n\n  return Pagination;\n});\n;// CONCATENATED MODULE: ./src/js/components/lazyload/index.js\n/**\r\n * The component for loading slider images lazily.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The name for a data attribute of src.\r\n *\r\n * @type {string}\r\n */\n\nvar SRC_DATA_NAME = 'data-splide-lazy';\n/**\r\n * The name for a data attribute of srcset.\r\n *\r\n * @type {string}\r\n */\n\nvar SRCSET_DATA_NAME = 'data-splide-lazy-srcset';\n/**\r\n * The component for loading slider images lazily.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const lazyload = (function (Splide, Components, name) {\n  /**\r\n   * Next index for sequential loading.\r\n   *\r\n   * @type {number}\r\n   */\n  var nextIndex;\n  /**\r\n   * Store objects containing an img element and a Slide object.\r\n   *\r\n   * @type {Object[]}\r\n   */\n\n  var images;\n  /**\r\n   * Store the options.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var options = Splide.options;\n  /**\r\n   * Whether to load images sequentially or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isSequential = options.lazyLoad === 'sequential';\n  /**\r\n   * Lazyload component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Lazyload = {\n    /**\r\n     * Mount only when the lazyload option is provided.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: options.lazyLoad,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('mounted refresh', function () {\n        init();\n        Components.Elements.each(function (Slide) {\n          each(Slide.slide.querySelectorAll(\"[\" + SRC_DATA_NAME + \"], [\" + SRCSET_DATA_NAME + \"]\"), function (img) {\n            if (!img.src && !img.srcset) {\n              images.push({\n                img: img,\n                Slide: Slide\n              });\n              applyStyle(img, {\n                display: 'none'\n              });\n            }\n          });\n        });\n\n        if (isSequential) {\n          loadNext();\n        }\n      });\n\n      if (!isSequential) {\n        Splide.on(\"mounted refresh moved.\" + name, check);\n      }\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: init\n  };\n  /**\r\n   * Initialize parameters.\r\n   */\n\n  function init() {\n    images = [];\n    nextIndex = 0;\n  }\n  /**\r\n   * Check how close each image is from the active slide and\r\n   * determine whether to start loading or not, according to the distance.\r\n   *\r\n   * @param {number} index - Current index.\r\n   */\n\n\n  function check(index) {\n    index = isNaN(index) ? Splide.index : index;\n    images = images.filter(function (image) {\n      if (image.Slide.isWithin(index, options.perPage * (options.preloadPages + 1))) {\n        load(image.img, image.Slide);\n        return false;\n      }\n\n      return true;\n    }); // Unbind if all images are loaded.\n\n    if (!images[0]) {\n      Splide.off(\"moved.\" + name);\n    }\n  }\n  /**\r\n   * Start loading an image.\r\n   * Creating a clone of the image element since setting src attribute directly to it\r\n   * often occurs 'hitch', blocking some other processes of a browser.\r\n   *\r\n   * @param {Element} img   - An image element.\r\n   * @param {Object}  Slide - A Slide object.\r\n   */\n\n\n  function load(img, Slide) {\n    addClass(Slide.slide, STATUS_CLASSES.loading);\n    var spinner = create('span', {\n      \"class\": Splide.classes.spinner\n    });\n    append(img.parentElement, spinner);\n\n    img.onload = function () {\n      loaded(img, spinner, Slide, false);\n    };\n\n    img.onerror = function () {\n      loaded(img, spinner, Slide, true);\n    };\n\n    setAttribute(img, 'srcset', getAttribute(img, SRCSET_DATA_NAME) || '');\n    setAttribute(img, 'src', getAttribute(img, SRC_DATA_NAME) || '');\n  }\n  /**\r\n   * Start loading a next image in images array.\r\n   */\n\n\n  function loadNext() {\n    if (nextIndex < images.length) {\n      var image = images[nextIndex];\n      load(image.img, image.Slide);\n    }\n\n    nextIndex++;\n  }\n  /**\r\n   * Called just after the image was loaded or loading was aborted by some error.\r\n   *\r\n   * @param {Element} img     - An image element.\r\n   * @param {Element} spinner - A spinner element.\r\n   * @param {Object}  Slide   - A Slide object.\r\n   * @param {boolean} error   - True if the image was loaded successfully or false on error.\r\n   */\n\n\n  function loaded(img, spinner, Slide, error) {\n    removeClass(Slide.slide, STATUS_CLASSES.loading);\n\n    if (!error) {\n      dom_remove(spinner);\n      applyStyle(img, {\n        display: ''\n      });\n      Splide.emit(name + \":loaded\", img).emit('resize');\n    }\n\n    if (isSequential) {\n      loadNext();\n    }\n  }\n\n  return Lazyload;\n});\n;// CONCATENATED MODULE: ./src/js/constants/a11y.js\n/**\r\n * Export aria attribute names.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Attribute name for aria-current.\r\n *\r\n * @type {string}\r\n */\nvar ARIA_CURRENRT = 'aria-current';\n/**\r\n * Attribute name for aria-control.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_CONTROLS = 'aria-controls';\n/**\r\n * Attribute name for aria-control.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_LABEL = 'aria-label';\n/**\r\n * Attribute name for aria-labelledby.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_LABELLEDBY = 'aria-labelledby';\n/**\r\n * Attribute name for aria-hidden.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_HIDDEN = 'aria-hidden';\n/**\r\n * Attribute name for tab-index.\r\n *\r\n * @type {string}\r\n */\n\nvar TAB_INDEX = 'tabindex';\n;// CONCATENATED MODULE: ./src/js/components/keyboard/index.js\n/**\r\n * The component for controlling slides via keyboard.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Map a key to a slide control.\r\n *\r\n * @type {Object}\r\n */\n\nvar KEY_MAP = {\n  ltr: {\n    ArrowLeft: '<',\n    ArrowRight: '>',\n    // For IE.\n    Left: '<',\n    Right: '>'\n  },\n  rtl: {\n    ArrowLeft: '>',\n    ArrowRight: '<',\n    // For IE.\n    Left: '>',\n    Right: '<'\n  },\n  ttb: {\n    ArrowUp: '<',\n    ArrowDown: '>',\n    // For IE.\n    Up: '<',\n    Down: '>'\n  }\n};\n/**\r\n * The component for controlling slides via keyboard.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const keyboard = (function (Splide) {\n  /**\r\n   * Hold the target element.\r\n   *\r\n   * @type {Element|Document|undefined}\r\n   */\n  var target;\n  return {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('mounted updated', function () {\n        var options = Splide.options;\n        var root = Splide.root;\n        var map = KEY_MAP[options.direction];\n        var keyboard = options.keyboard;\n\n        if (target) {\n          Splide.off('keydown', target);\n          removeAttribute(root, TAB_INDEX);\n        }\n\n        if (keyboard) {\n          if (keyboard === 'focused') {\n            target = root;\n            setAttribute(root, TAB_INDEX, 0);\n          } else {\n            target = document;\n          }\n\n          Splide.on('keydown', function (e) {\n            if (map[e.key]) {\n              Splide.go(map[e.key]);\n            }\n          }, target);\n        }\n      });\n    }\n  };\n});\n;// CONCATENATED MODULE: ./src/js/components/a11y/index.js\n/**\r\n * The component for enhancing accessibility.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The component for enhancing accessibility.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const a11y = (function (Splide, Components) {\n  /**\r\n   * Hold a i18n object.\r\n   *\r\n   * @type {Object}\r\n   */\n  var i18n = Splide.i18n;\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * All attributes related with A11y.\r\n   *\r\n   * @type {string[]}\r\n   */\n\n  var allAttributes = [ARIA_HIDDEN, TAB_INDEX, ARIA_CONTROLS, ARIA_LABEL, ARIA_CURRENRT, 'role'];\n  /**\r\n   * A11y component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var A11y = {\n    /**\r\n     * Required only when the accessibility option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.accessibility,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('visible', function (Slide) {\n        updateSlide(Slide.slide, true);\n      }).on('hidden', function (Slide) {\n        updateSlide(Slide.slide, false);\n      }).on('arrows:mounted', initArrows).on('arrows:updated', updateArrows).on('pagination:mounted', initPagination).on('pagination:updated', updatePagination).on('refresh', function () {\n        removeAttribute(Components.Clones.clones, allAttributes);\n      });\n\n      if (Splide.options.isNavigation) {\n        Splide.on('navigation:mounted navigation:updated', initNavigation).on('active', function (Slide) {\n          updateNavigation(Slide, true);\n        }).on('inactive', function (Slide) {\n          updateNavigation(Slide, false);\n        });\n      }\n\n      initAutoplay();\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      var Arrows = Components.Arrows;\n      var arrows = Arrows ? Arrows.arrows : {};\n      removeAttribute(Elements.slides.concat([arrows.prev, arrows.next, Elements.play, Elements.pause]), allAttributes);\n    }\n  };\n  /**\r\n   * Update slide attributes when it gets visible or hidden.\r\n   *\r\n   * @param {Element} slide   - A slide element.\r\n   * @param {Boolean} visible - True when the slide gets visible, or false when hidden.\r\n   */\n\n  function updateSlide(slide, visible) {\n    setAttribute(slide, ARIA_HIDDEN, !visible);\n\n    if (Splide.options.slideFocus) {\n      setAttribute(slide, TAB_INDEX, visible ? 0 : -1);\n    }\n  }\n  /**\r\n   * Initialize arrows if they are available.\r\n   * Append screen reader elements and add aria-controls attribute.\r\n   *\r\n   * @param {Element} prev - Previous arrow element.\r\n   * @param {Element} next - Next arrow element.\r\n   */\n\n\n  function initArrows(prev, next) {\n    var controls = Elements.track.id;\n    setAttribute(prev, ARIA_CONTROLS, controls);\n    setAttribute(next, ARIA_CONTROLS, controls);\n  }\n  /**\r\n   * Update arrow attributes.\r\n   *\r\n   * @param {Element} prev      - Previous arrow element.\r\n   * @param {Element} next      - Next arrow element.\r\n   * @param {number}  prevIndex - Previous slide index or -1 when there is no precede slide.\r\n   * @param {number}  nextIndex - Next slide index or -1 when there is no next slide.\r\n   */\n\n\n  function updateArrows(prev, next, prevIndex, nextIndex) {\n    var index = Splide.index;\n    var prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    var nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n  }\n  /**\r\n   * Initialize pagination if it's available.\r\n   * Append a screen reader element and add aria-controls/label attribute to each item.\r\n   *\r\n   * @param {Object} data       - Data object containing all items.\r\n   * @param {Object} activeItem - An initial active item.\r\n   */\n\n\n  function initPagination(data, activeItem) {\n    if (activeItem) {\n      setAttribute(activeItem.button, ARIA_CURRENRT, true);\n    }\n\n    data.items.forEach(function (item) {\n      var options = Splide.options;\n      var text = options.focus === false && options.perPage > 1 ? i18n.pageX : i18n.slideX;\n      var label = sprintf(text, item.page + 1);\n      var button = item.button;\n      var controls = item.Slides.map(function (Slide) {\n        return Slide.slide.id;\n      });\n      setAttribute(button, ARIA_CONTROLS, controls.join(' '));\n      setAttribute(button, ARIA_LABEL, label);\n    });\n  }\n  /**\r\n   * Update pagination attributes.\r\n   *\r\n   * @param {Object}  data - Data object containing all items.\r\n   * @param {Element} prev - A previous active element.\r\n   * @param {Element} curr - A current active element.\r\n   */\n\n\n  function updatePagination(data, prev, curr) {\n    if (prev) {\n      removeAttribute(prev.button, ARIA_CURRENRT);\n    }\n\n    if (curr) {\n      setAttribute(curr.button, ARIA_CURRENRT, true);\n    }\n  }\n  /**\r\n   * Initialize autoplay buttons.\r\n   */\n\n\n  function initAutoplay() {\n    ['play', 'pause'].forEach(function (name) {\n      var elm = Elements[name];\n\n      if (elm) {\n        if (!isButton(elm)) {\n          setAttribute(elm, 'role', 'button');\n        }\n\n        setAttribute(elm, ARIA_CONTROLS, Elements.track.id);\n        setAttribute(elm, ARIA_LABEL, i18n[name]);\n      }\n    });\n  }\n  /**\r\n   * Initialize navigation slider.\r\n   * Add button role, aria-label, aria-controls to slide elements and append screen reader text to them.\r\n   *\r\n   * @param {Splide} main - A main Splide instance.\r\n   */\n\n\n  function initNavigation(main) {\n    Elements.each(function (Slide) {\n      var slide = Slide.slide;\n      var realIndex = Slide.realIndex;\n\n      if (!isButton(slide)) {\n        setAttribute(slide, 'role', 'button');\n      }\n\n      var slideIndex = realIndex > -1 ? realIndex : Slide.index;\n      var label = sprintf(i18n.slideX, slideIndex + 1);\n      var mainSlide = main.Components.Elements.getSlide(slideIndex);\n      setAttribute(slide, ARIA_LABEL, label);\n\n      if (mainSlide) {\n        setAttribute(slide, ARIA_CONTROLS, mainSlide.slide.id);\n      }\n    });\n  }\n  /**\r\n   * Update navigation attributes.\r\n   *\r\n   * @param {Object}  Slide  - A target Slide object.\r\n   * @param {boolean} active - True if the slide is active or false if inactive.\r\n   */\n\n\n  function updateNavigation(_ref, active) {\n    var slide = _ref.slide;\n\n    if (active) {\n      setAttribute(slide, ARIA_CURRENRT, true);\n    } else {\n      removeAttribute(slide, ARIA_CURRENRT);\n    }\n  }\n  /**\r\n   * Check if the given element is button or not.\r\n   *\r\n   * @param {Element} elm - An element to be checked.\r\n   *\r\n   * @return {boolean} - True if the given element is button.\r\n   */\n\n\n  function isButton(elm) {\n    return elm.tagName === 'BUTTON';\n  }\n\n  return A11y;\n});\n;// CONCATENATED MODULE: ./src/js/components/sync/index.js\n/**\r\n * The component for synchronizing a slider with another.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The event name for sync.\r\n *\r\n * @type {string}\r\n */\n\nvar SYNC_EVENT = 'move.sync';\n/**\r\n * The event names for click navigation.\r\n * @type {string}\r\n */\n\nvar CLICK_EVENTS = 'mouseup touchend';\n/**\r\n * The keys for triggering the navigation button.\r\n *\r\n * @type {String[]}\r\n */\n\nvar TRIGGER_KEYS = [' ', 'Enter', 'Spacebar'];\n/**\r\n * The component for synchronizing a slider with another.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const sync = (function (Splide) {\n  /**\r\n   * Keep the sibling Splide instance.\r\n   *\r\n   * @type {Splide}\r\n   */\n  var sibling = Splide.sibling;\n  /**\r\n   * Whether the sibling slider is navigation or not.\r\n   *\r\n   * @type {Splide|boolean}\r\n   */\n\n  var isNavigation = sibling && sibling.options.isNavigation;\n  /**\r\n   * Layout component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Sync = {\n    /**\r\n     * Required only when the sub slider is available.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: !!sibling,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      syncMain();\n      syncSibling();\n\n      if (isNavigation) {\n        bind();\n        Splide.on('refresh', function () {\n          setTimeout(function () {\n            bind();\n            sibling.emit('navigation:updated', Splide);\n          });\n        });\n      }\n    },\n\n    /**\r\n     * Called after all components are mounted.\r\n     */\n    mounted: function mounted() {\n      if (isNavigation) {\n        sibling.emit('navigation:mounted', Splide);\n      }\n    }\n  };\n  /**\r\n   * Listen the primary slider event to move secondary one.\r\n   * Must unbind a handler at first to avoid infinite loop.\r\n   */\n\n  function syncMain() {\n    Splide.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\n      sibling.off(SYNC_EVENT).go(sibling.is(LOOP) ? destIndex : newIndex, false);\n      syncSibling();\n    });\n  }\n  /**\r\n   * Listen the secondary slider event to move primary one.\r\n   * Must unbind a handler at first to avoid infinite loop.\r\n   */\n\n\n  function syncSibling() {\n    sibling.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\n      Splide.off(SYNC_EVENT).go(Splide.is(LOOP) ? destIndex : newIndex, false);\n      syncMain();\n    });\n  }\n  /**\r\n   * Listen some events on each slide.\r\n   */\n\n\n  function bind() {\n    sibling.Components.Elements.each(function (_ref) {\n      var slide = _ref.slide,\n          index = _ref.index;\n\n      /*\r\n       * Listen mouseup and touchend events to handle click.\r\n       */\n      Splide.off(CLICK_EVENTS, slide).on(CLICK_EVENTS, function (e) {\n        // Ignore a middle or right click.\n        if (!e.button || e.button === 0) {\n          moveSibling(index);\n        }\n      }, slide);\n      /*\r\n       * Subscribe keyup to handle Enter and Space key.\r\n       * Note that Array.includes is not supported by IE.\r\n       */\n\n      Splide.off('keyup', slide).on('keyup', function (e) {\n        if (TRIGGER_KEYS.indexOf(e.key) > -1) {\n          e.preventDefault();\n          moveSibling(index);\n        }\n      }, slide, {\n        passive: false\n      });\n    });\n  }\n  /**\r\n   * Move the sibling to the given index.\r\n   * Need to check \"IDLE\" status because slides can be moving by Drag component.\r\n   *\r\n   * @param {number} index - Target index.\r\n   */\n\n\n  function moveSibling(index) {\n    if (Splide.State.is(IDLE)) {\n      sibling.go(index);\n    }\n  }\n\n  return Sync;\n});\n;// CONCATENATED MODULE: ./src/js/components/breakpoints/index.js\n/**\r\n * The component for updating options according to a current window width.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Interval time for throttle.\r\n *\r\n * @type {number}\r\n */\n\nvar THROTTLE = 50;\n/**\r\n * The component for updating options according to a current window width.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const breakpoints = (function (Splide) {\n  /**\r\n   * Store breakpoints.\r\n   *\r\n   * @type {Object|boolean}\r\n   */\n  var breakpoints = Splide.options.breakpoints;\n  /**\r\n   * The check function whose frequency of call is reduced.\r\n   *\r\n   * @type {Function}\r\n   */\n\n  var throttledCheck = throttle(check, THROTTLE);\n  /**\r\n   * Keep initial options.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var initialOptions;\n  /**\r\n   * An array containing objects of point and MediaQueryList.\r\n   *\r\n   * @type {Object[]}\r\n   */\n\n  var map = [];\n  /**\r\n   * Hold the previous breakpoint.\r\n   *\r\n   * @type {number|undefined}\r\n   */\n\n  var prevPoint;\n  /**\r\n   * Breakpoints component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Breakpoints = {\n    /**\r\n     * Required only when the breakpoints definition is provided and browser supports matchMedia.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: breakpoints && matchMedia,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      map = Object.keys(breakpoints).sort(function (n, m) {\n        return +n - +m;\n      }).map(function (point) {\n        return {\n          point: point,\n          mql: matchMedia(\"(max-width:\" + point + \"px)\")\n        };\n      });\n      /*\r\n       * To keep monitoring resize event after destruction without \"completely\",\r\n       * use native addEventListener instead of Splide.on.\r\n       */\n\n      this.destroy(true);\n      addEventListener('resize', throttledCheck); // Keep initial options to apply them when no breakpoint matches.\n\n      initialOptions = Splide.options;\n      check();\n    },\n\n    /**\r\n     * Destroy.\r\n     *\r\n     * @param {boolean} completely - Whether to destroy Splide completely.\r\n     */\n    destroy: function destroy(completely) {\n      if (completely) {\n        removeEventListener('resize', throttledCheck);\n      }\n    }\n  };\n  /**\r\n   * Check the breakpoint.\r\n   */\n\n  function check() {\n    var point = getPoint();\n\n    if (point !== prevPoint) {\n      prevPoint = point;\n      var State = Splide.State;\n      var options = breakpoints[point] || initialOptions;\n      var destroy = options.destroy;\n\n      if (destroy) {\n        Splide.options = initialOptions;\n        Splide.destroy(destroy === 'completely');\n      } else {\n        if (State.is(DESTROYED)) {\n          Splide.mount();\n        }\n\n        Splide.options = options;\n      }\n    }\n  }\n  /**\r\n   * Return the breakpoint matching current window width.\r\n   * Note that Array.prototype.find is not supported by IE.\r\n   *\r\n   * @return {number|string} - A breakpoint as number or string. -1 if no point matches.\r\n   */\n\n\n  function getPoint() {\n    var item = map.filter(function (item) {\n      return item.mql.matches;\n    })[0];\n    return item ? item.point : -1;\n  }\n\n  return Breakpoints;\n});\n;// CONCATENATED MODULE: ./src/js/components/index.js\n/**\r\n * Export components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar COMPLETE = {\n  Options: options,\n  Breakpoints: breakpoints,\n  Controller: controller,\n  Elements: components_elements,\n  Track: track,\n  Clones: clones,\n  Layout: layout,\n  Drag: drag,\n  Click: click,\n  Autoplay: autoplay,\n  Cover: cover,\n  Arrows: arrows,\n  Pagination: pagination,\n  LazyLoad: lazyload,\n  Keyboard: keyboard,\n  Sync: sync,\n  A11y: a11y\n};\nvar LIGHT = {\n  Options: options,\n  Controller: controller,\n  Elements: components_elements,\n  Track: track,\n  Clones: clones,\n  Layout: layout,\n  Drag: drag,\n  Click: click,\n  Arrows: arrows,\n  Pagination: pagination,\n  A11y: a11y\n};\n;// CONCATENATED MODULE: ./build/module/module.js\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\r\n * Export Splide class for import.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Export Splide class for import from other projects.\r\n */\n\nvar module_Splide = /*#__PURE__*/function (_Core) {\n  _inheritsLoose(Splide, _Core);\n\n  function Splide(root, options) {\n    return _Core.call(this, root, options, COMPLETE) || this;\n  }\n\n  return Splide;\n}(Splide);\n\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(311);\n/******/ })()\n;\n});","// Do not import this module to the application! Import index.js instead.\r\n\r\n/**\r\n * @type {Toaster}\r\n */\r\nexport let toaster = new Toaster();\r\n\r\n/**\r\n * Toasts controller. Controls toasts that appear on the screen.\r\n * @constructor\r\n * @private\r\n */\r\nfunction Toaster () {\r\n\r\n    /**\r\n     * @type {Toast[]}\r\n     */\r\n    this.toasts = [];\r\n\r\n\t/**\r\n     * Keeps the timeouts of toasts which are removed.\r\n\t * @type {Map}\r\n\t */\r\n\tthis.timeouts = new Map();\r\n\r\n}\r\n\r\n/**\r\n * @param {Toast} toast\r\n * @param {number} timeout\r\n */\r\nToaster.prototype.push = function (toast, timeout) {\r\n\r\n    requestAnimationFrame(() => {\r\n\r\n        let height = toast.attach(0);\r\n\r\n        this.toasts.forEach((toast) => {\r\n            toast.seek(height);\r\n        });\r\n        this.toasts.push(toast);\r\n\r\n        this.timeouts.set(toast, setTimeout(() => this.remove(toast), timeout));\r\n\r\n    });\r\n\r\n};\r\n\r\n/**\r\n * @param {Toast} toast\r\n */\r\nToaster.prototype.remove = function (toast) {\r\n\r\n\tif (this.timeouts.has(toast)) {\r\n\t\tclearTimeout(this.timeouts.get(toast));\r\n\t\tthis.timeouts.delete(toast);\r\n\t} else {\r\n\t\treturn; // already deleted\r\n\t}\r\n\r\n\tconst index = this.toasts.indexOf(toast);\r\n\tconst tst = this.toasts.splice(index, 1)[0];\r\n\tconst height = toast.element.offsetHeight;\r\n\r\n\ttst.detach();\r\n\tthis.toasts.slice(0, index).forEach(t => t.seek(-height));\r\n\r\n};\r\n\r\nToaster.prototype.removeAll = function () {\r\n\twhile (this.toasts.length > 0)\r\n\t\tthis.remove(this.toasts[0]);\r\n};","import { toaster } from \"./Toaster.js\";\r\n\r\nToast.TYPE_INFO = \"info\";\r\nToast.TYPE_MESSAGE = \"message\";\r\nToast.TYPE_WARNING = \"warning\";\r\nToast.TYPE_ERROR = \"error\";\r\nToast.TYPE_DONE = \"done\";\r\n\r\nToast.TIME_SHORT = 2000;\r\nToast.TIME_NORMAL = 4000;\r\nToast.TIME_LONG = 8000;\r\n\r\nlet options = {\r\n\tdeleteDelay: 300,\r\n    topOrigin: 0\r\n};\r\n\r\n/**\r\n * Allows you to configure Toasts options during the application setup.\r\n * @param newOptions\r\n */\r\nexport function configureToasts (newOptions = {}) {\r\n    Object.assign(options, newOptions);\r\n}\r\n\r\n/**\r\n * Delete all toast currently displayed.\r\n */\r\nexport function deleteAllToasts () {\r\n    return toaster.removeAll();\r\n}\r\n\r\n/**\r\n * On-screen toast message.\r\n * @param {string|Element} text - Message text.\r\n * @param {string} [type] - Toast.TYPE_*\r\n * @param {number} [timeout] - Toast.TIME_*\r\n * @constructor\r\n */\r\nexport function Toast (text = `No text!`, type = Toast.TYPE_INFO, timeout = Toast.TIME_LONG) {\r\n\r\n    let el1 = document.createElement(\"div\"),\r\n        el2 = document.createElement(\"div\");\r\n\r\n    el1.className = \"toast\";\r\n    el2.className = `body ${type}`;\r\n    el1.appendChild(el2);\r\n    if (text instanceof Element) {\r\n        el2.appendChild(text);\r\n    } else {\r\n\t    el2.textContent = `${text}`;\r\n    }\r\n\r\n    this.element = el1;\r\n    this.position = 0;\r\n\r\n    toaster.push(this, timeout);\r\n\r\n}\r\n\r\n/**\r\n * Attaches toast to DOM and returns the height of the element.\r\n */\r\nToast.prototype.attach = function (position) {\r\n\r\n    this.position = position;\r\n    this.updateVisualPosition();\r\n    document.body.appendChild(this.element);\r\n    requestAnimationFrame(() => {\r\n\t    this.element.classList.add(\"displayed\");\r\n    });\r\n\r\n    return this.element.offsetHeight;\r\n\r\n};\r\n\r\n/**\r\n * Seek the toast message by Y coordinate.\r\n * @param delta\r\n */\r\nToast.prototype.seek = function (delta) {\r\n\r\n    this.position += delta;\r\n    this.updateVisualPosition();\r\n\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nToast.prototype.updateVisualPosition = function () {\r\n\r\n    requestAnimationFrame(() => {\r\n        this.element.style.bottom = -options.topOrigin + this.position + \"px\";\r\n    });\r\n\r\n};\r\n\r\n/**\r\n * Removes toast from DOM.\r\n */\r\nToast.prototype.detach = function () {\r\n\r\n    let self = this;\r\n\r\n    if (!this.element.parentNode) return;\r\n\r\n    requestAnimationFrame(() => {\r\n\t    this.element.classList.remove(\"displayed\");\r\n        this.element.classList.add(\"deleted\");\r\n    });\r\n    setTimeout(() => {\r\n        requestAnimationFrame(() => {\r\n            if (!self.element || !self.element.parentNode)\r\n                return;\r\n            self.element.parentNode.removeChild(self.element);\r\n        });\r\n    }, options.deleteDelay);\r\n\r\n};\r\n\r\nToast.prototype.delete = function () {\r\n\r\n    toaster.remove(this);\r\n\r\n};"],"sourceRoot":""}